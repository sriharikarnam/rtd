<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="group__HCC-specific" kind="group">
    <compoundname>HCC-specific</compoundname>
    <title>features</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__HCC-specific_1ga0d24b3157fd1b16d38672bb157ec4cd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__GlobalDefs_1gadf5010f6e140a53ecbdf949e73e87594" kindref="member">hipError_t</ref></type>
        <definition>hipError_t hipHccGetAccelerator</definition>
        <argsstring>(int deviceId, hc::accelerator *acc)</argsstring>
        <name>hipHccGetAccelerator</name>
        <param>
          <type>int</type>
          <declname>deviceId</declname>
        </param>
        <param>
          <type>hc::accelerator *</type>
          <declname>acc</declname>
        </param>
        <briefdescription>
<para>Return hc::accelerator associated with the specified deviceId. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="group__GlobalDefs_1ggadf5010f6e140a53ecbdf949e73e87594aadfbdb847b149723c684ebd764556063" kindref="member">hipSuccess</ref>, <ref refid="group__GlobalDefs_1ggadf5010f6e140a53ecbdf949e73e87594a07ab9b704ea693c1781a52741c60cd0d" kindref="member">hipErrorInvalidDevice</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/include/hip/hip_hcc.h" line="50" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="2128" bodyend="2141"/>
      </memberdef>
      <memberdef kind="function" id="group__HCC-specific_1ga1a7087ea9c3c3323270d7cce73650b44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__GlobalDefs_1gadf5010f6e140a53ecbdf949e73e87594" kindref="member">hipError_t</ref></type>
        <definition>hipError_t hipHccGetAcceleratorView</definition>
        <argsstring>(hipStream_t stream, hc::accelerator_view **av)</argsstring>
        <name>hipHccGetAcceleratorView</name>
        <param>
          <type><ref refid="classihipStream__t" kindref="compound">hipStream_t</ref></type>
          <declname>stream</declname>
        </param>
        <param>
          <type>hc::accelerator_view **</type>
          <declname>av</declname>
        </param>
        <briefdescription>
<para>Return hc::accelerator_view associated with the specified stream. </para>        </briefdescription>
        <detaileddescription>
<para>If stream is 0, the accelerator_view for the default stream is returned. <simplesect kind="return"><para><ref refid="group__GlobalDefs_1ggadf5010f6e140a53ecbdf949e73e87594aadfbdb847b149723c684ebd764556063" kindref="member">hipSuccess</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/include/hip/hip_hcc.h" line="58" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="2145" bodyend="2158"/>
      </memberdef>
      <memberdef kind="function" id="group__HCC-specific_1gac59bc0af52686850c1249cb8216eb4e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__GlobalDefs_1gadf5010f6e140a53ecbdf949e73e87594" kindref="member">hipError_t</ref></type>
        <definition>hipError_t hipHccModuleLaunchKernel</definition>
        <argsstring>(hipFunction_t f, uint32_t globalWorkSizeX, uint32_t globalWorkSizeY, uint32_t globalWorkSizeZ, uint32_t localWorkSizeX, uint32_t localWorkSizeY, uint32_t localWorkSizeZ, size_t sharedMemBytes, hipStream_t hStream, void **kernelParams, void **extra, hipEvent_t startEvent=nullptr, hipEvent_t stopEvent=nullptr)</argsstring>
        <name>hipHccModuleLaunchKernel</name>
        <param>
          <type><ref refid="structihipModuleSymbol__t" kindref="compound">hipFunction_t</ref></type>
          <declname>f</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>globalWorkSizeX</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>globalWorkSizeY</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>globalWorkSizeZ</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>localWorkSizeX</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>localWorkSizeY</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>localWorkSizeZ</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sharedMemBytes</declname>
        </param>
        <param>
          <type><ref refid="classihipStream__t" kindref="compound">hipStream_t</ref></type>
          <declname>hStream</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>kernelParams</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>extra</declname>
        </param>
        <param>
          <type><ref refid="classihipEvent__t" kindref="compound">hipEvent_t</ref></type>
          <declname>startEvent</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type><ref refid="classihipEvent__t" kindref="compound">hipEvent_t</ref></type>
          <declname>stopEvent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>launches kernel f with launch parameters and shared memory on stream with arguments passed to kernelparams or extra </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>[in[</parametername>
</parameternamelist>
<parameterdescription>
<para>f Kernel to launch. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">gridDimX</parametername>
</parameternamelist>
<parameterdescription>
<para>X grid dimension specified in work-items </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">gridDimY</parametername>
</parameternamelist>
<parameterdescription>
<para>Y grid dimension specified in work-items </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">gridDimZ</parametername>
</parameternamelist>
<parameterdescription>
<para>Z grid dimension specified in work-items </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockDimX</parametername>
</parameternamelist>
<parameterdescription>
<para>X block dimensions specified in work-items </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockDimY</parametername>
</parameternamelist>
<parameterdescription>
<para>Y grid dimension specified in work-items </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockDimZ</parametername>
</parameternamelist>
<parameterdescription>
<para>Z grid dimension specified in work-items </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sharedMemBytes</parametername>
</parameternamelist>
<parameterdescription>
<para>Amount of dynamic shared memory to allocate for this kernel. The kernel can access this with HIP_DYNAMIC_SHARED. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stream</parametername>
</parameternamelist>
<parameterdescription>
<para>Stream where the kernel should be dispatched. May be 0, in which case th default stream is used with associated synchronization rules. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">kernelParams</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">extra</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to kernel arguments. These are passed directly to the kernel and must be in the memory layout and alignment expected by the kernel. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">startEvent</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, specified event will be updated to track the start time of the kernel launch. The event must be created before calling this API. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stopEvent</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-null, specified event will be updated to track the stop time of the kernel launch. The event must be created before calling this API.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hipSuccess, hipInvalidDevice, hipErrorNotInitialized, hipErrorInvalidValue</para></simplesect>
<simplesect kind="warning"><para>kernellParams argument is not yet implemented in HIP. Please use extra instead. Please refer to hip_porting_driver_api.md for sample usage.</para></simplesect>
HIP/ROCm actually updates the start event when the associated kernel completes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/include/hip/hip_hcc.h" line="85" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_module.cpp" bodystart="497" bodyend="511"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><heading level="2">----------------------------------------------------------------------------------------------<mdash/> </heading>
</para><para><simplesect kind="warning"><para>These APIs provide access to special features of HCC compiler and are not available through the CUDA path. </para></simplesect>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
