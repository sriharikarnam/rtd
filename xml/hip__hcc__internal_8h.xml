<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="hip__hcc__internal_8h" kind="file" language="C++">
    <compoundname>hip_hcc_internal.h</compoundname>
    <includes local="no">hc.hpp</includes>
    <includes local="no">hsa/hsa.h</includes>
    <includes local="yes">hsa/hsa_ext_amd.h</includes>
    <includes refid="hip__runtime_8h" local="yes">hip/hip_runtime.h</includes>
    <includes refid="hip__util_8h" local="yes">hip_util.h</includes>
    <includes refid="env_8h" local="yes">env.h</includes>
    <includedby refid="env_8cpp" local="yes">HIP/src/env.cpp</includedby>
    <includedby refid="grid__launch_8cpp" local="yes">HIP/src/grid_launch.cpp</includedby>
    <includedby refid="hip__context_8cpp" local="yes">HIP/src/hip_context.cpp</includedby>
    <includedby refid="hip__device_8cpp" local="yes">HIP/src/hip_device.cpp</includedby>
    <includedby refid="hip__error_8cpp" local="yes">HIP/src/hip_error.cpp</includedby>
    <includedby refid="hip__event_8cpp" local="yes">HIP/src/hip_event.cpp</includedby>
    <includedby refid="hip__hcc_8cpp" local="yes">HIP/src/hip_hcc.cpp</includedby>
    <includedby refid="hip__memory_8cpp" local="yes">HIP/src/hip_memory.cpp</includedby>
    <includedby refid="hip__module_8cpp" local="yes">HIP/src/hip_module.cpp</includedby>
    <includedby refid="hip__peer_8cpp" local="yes">HIP/src/hip_peer.cpp</includedby>
    <includedby refid="hip__stream_8cpp" local="yes">HIP/src/hip_stream.cpp</includedby>
    <includedby refid="hip__texture_8cpp" local="yes">HIP/src/hip_texture.cpp</includedby>
    <incdepgraph>
      <node id="970">
        <label>hip/hcc_detail/hip_runtime_api.h</label>
        <link refid="hcc__detail_2hip__runtime__api_8h"/>
        <childnode refid="960" relation="include">
        </childnode>
        <childnode refid="968" relation="include">
        </childnode>
        <childnode refid="971" relation="include">
        </childnode>
        <childnode refid="972" relation="include">
        </childnode>
        <childnode refid="969" relation="include">
        </childnode>
        <childnode refid="973" relation="include">
        </childnode>
        <childnode refid="974" relation="include">
        </childnode>
      </node>
      <node id="988">
        <label>list</label>
      </node>
      <node id="978">
        <label>hip/hcc_detail/texture_types.h</label>
        <link refid="hcc__detail_2texture__types_8h_source"/>
        <childnode refid="973" relation="include">
        </childnode>
      </node>
      <node id="983">
        <label>hip/hcc_detail/device_functions.h</label>
        <link refid="hcc__detail_2device__functions_8h_source"/>
        <childnode refid="959" relation="include">
        </childnode>
        <childnode refid="982" relation="include">
        </childnode>
      </node>
      <node id="957">
        <label>hsa/hsa.h</label>
      </node>
      <node id="963">
        <label>assert.h</label>
      </node>
      <node id="980">
        <label>hip/hcc_detail/math_functions.h</label>
        <link refid="hcc__detail_2math__functions_8h_source"/>
        <childnode refid="981" relation="include">
        </childnode>
        <childnode refid="959" relation="include">
        </childnode>
        <childnode refid="982" relation="include">
        </childnode>
        <childnode refid="983" relation="include">
        </childnode>
      </node>
      <node id="981">
        <label>kalmar_math.h</label>
      </node>
      <node id="976">
        <label>hip/hcc_detail/channel_descriptor.h</label>
        <link refid="hcc__detail_2channel__descriptor_8h_source"/>
        <childnode refid="973" relation="include">
        </childnode>
        <childnode refid="977" relation="include">
        </childnode>
      </node>
      <node id="960">
        <label>stdint.h</label>
      </node>
      <node id="962">
        <label>stdlib.h</label>
      </node>
      <node id="979">
        <label>grid_launch.h</label>
      </node>
      <node id="985">
        <label>hc_short_vector.hpp</label>
      </node>
      <node id="973">
        <label>hip/hcc_detail/driver_types.h</label>
        <link refid="hcc__detail_2driver__types_8h_source"/>
      </node>
      <node id="968">
        <label>stddef.h</label>
      </node>
      <node id="956">
        <label>hc.hpp</label>
      </node>
      <node id="975">
        <label>limits.h</label>
      </node>
      <node id="958">
        <label>hsa/hsa_ext_amd.h</label>
      </node>
      <node id="994">
        <label>env.h</label>
        <link refid="env_8h_source"/>
      </node>
      <node id="986">
        <label>hip_util.h</label>
        <link refid="hip__util_8h_source"/>
        <childnode refid="963" relation="include">
        </childnode>
        <childnode refid="960" relation="include">
        </childnode>
        <childnode refid="971" relation="include">
        </childnode>
        <childnode refid="987" relation="include">
        </childnode>
        <childnode refid="988" relation="include">
        </childnode>
        <childnode refid="989" relation="include">
        </childnode>
        <childnode refid="990" relation="include">
        </childnode>
        <childnode refid="991" relation="include">
        </childnode>
        <childnode refid="992" relation="include">
        </childnode>
        <childnode refid="993" relation="include">
        </childnode>
      </node>
      <node id="965">
        <label>hip/hcc_detail/hip_runtime.h</label>
        <link refid="hcc__detail_2hip__runtime_8h"/>
        <childnode refid="966" relation="include">
        </childnode>
        <childnode refid="967" relation="include">
        </childnode>
        <childnode refid="968" relation="include">
        </childnode>
        <childnode refid="969" relation="include">
        </childnode>
        <childnode refid="979" relation="include">
        </childnode>
        <childnode refid="972" relation="include">
        </childnode>
        <childnode refid="980" relation="include">
        </childnode>
        <childnode refid="983" relation="include">
        </childnode>
        <childnode refid="984" relation="include">
        </childnode>
      </node>
      <node id="989">
        <label>sys/types.h</label>
      </node>
      <node id="967">
        <label>string.h</label>
      </node>
      <node id="959">
        <label>hip/hip_runtime.h</label>
        <link refid="hip__runtime_8h_source"/>
        <childnode refid="960" relation="include">
        </childnode>
        <childnode refid="961" relation="include">
        </childnode>
        <childnode refid="962" relation="include">
        </childnode>
        <childnode refid="963" relation="include">
        </childnode>
        <childnode refid="964" relation="include">
        </childnode>
        <childnode refid="965" relation="include">
        </childnode>
        <childnode refid="969" relation="include">
        </childnode>
        <childnode refid="982" relation="include">
        </childnode>
      </node>
      <node id="990">
        <label>unistd.h</label>
      </node>
      <node id="992">
        <label>vector</label>
      </node>
      <node id="977">
        <label>hip/hcc_detail/hip_vector_types.h</label>
        <link refid="hcc__detail_2hip__vector__types_8h"/>
        <childnode refid="972" relation="include">
        </childnode>
      </node>
      <node id="987">
        <label>sstream</label>
      </node>
      <node id="964">
        <label>hip/hip_common.h</label>
        <link refid="hip__common_8h_source"/>
      </node>
      <node id="966">
        <label>math.h</label>
      </node>
      <node id="969">
        <label>hip/hip_runtime_api.h</label>
        <link refid="hip__runtime__api_8h_source"/>
        <childnode refid="967" relation="include">
        </childnode>
        <childnode refid="964" relation="include">
        </childnode>
        <childnode refid="970" relation="include">
        </childnode>
      </node>
      <node id="955">
        <label>HIP/src/hip_hcc_internal.h</label>
        <link refid="hip_hcc_internal.h"/>
        <childnode refid="956" relation="include">
        </childnode>
        <childnode refid="957" relation="include">
        </childnode>
        <childnode refid="958" relation="include">
        </childnode>
        <childnode refid="959" relation="include">
        </childnode>
        <childnode refid="986" relation="include">
        </childnode>
        <childnode refid="994" relation="include">
        </childnode>
      </node>
      <node id="971">
        <label>iostream</label>
      </node>
      <node id="991">
        <label>deque</label>
      </node>
      <node id="984">
        <label>hip/hcc_detail/texture_functions.h</label>
        <link refid="texture__functions_8h_source"/>
        <childnode refid="956" relation="include">
        </childnode>
        <childnode refid="985" relation="include">
        </childnode>
        <childnode refid="974" relation="include">
        </childnode>
      </node>
      <node id="993">
        <label>algorithm</label>
      </node>
      <node id="982">
        <label>hip/hip_vector_types.h</label>
        <link refid="hip__vector__types_8h_source"/>
        <childnode refid="964" relation="include">
        </childnode>
      </node>
      <node id="974">
        <label>hip/hcc_detail/hip_texture_types.h</label>
        <link refid="hcc__detail_2hip__texture__types_8h"/>
        <childnode refid="975" relation="include">
        </childnode>
        <childnode refid="976" relation="include">
        </childnode>
        <childnode refid="978" relation="include">
        </childnode>
      </node>
      <node id="961">
        <label>stdio.h</label>
      </node>
      <node id="972">
        <label>hip/hcc_detail/host_defines.h</label>
        <link refid="host__defines_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="996">
        <label>HIP/src/hip_hcc.cpp</label>
        <link refid="hip__hcc_8cpp"/>
      </node>
      <node id="995">
        <label>HIP/src/hip_hcc_internal.h</label>
        <link refid="hip_hcc_internal.h"/>
        <childnode refid="996" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classTidInfo" prot="public">TidInfo</innerclass>
    <innerclass refid="structProfTrigger" prot="public">ProfTrigger</innerclass>
    <innerclass refid="structDbName" prot="public">DbName</innerclass>
    <innerclass refid="classihipException" prot="public">ihipException</innerclass>
    <innerclass refid="classihipIpcMemHandle__t" prot="public">ihipIpcMemHandle_t</innerclass>
    <innerclass refid="classihipModule__t" prot="public">ihipModule_t</innerclass>
    <innerclass refid="classFakeMutex" prot="public">FakeMutex</innerclass>
    <innerclass refid="classLockedAccessor" prot="public">LockedAccessor</innerclass>
    <innerclass refid="structLockedBase" prot="public">LockedBase</innerclass>
    <innerclass refid="classihipStreamCriticalBase__t" prot="public">ihipStreamCriticalBase_t</innerclass>
    <innerclass refid="classihipStream__t" prot="public">ihipStream_t</innerclass>
    <innerclass refid="classihipEvent__t" prot="public">ihipEvent_t</innerclass>
    <innerclass refid="classihipDeviceCriticalBase__t" prot="public">ihipDeviceCriticalBase_t</innerclass>
    <innerclass refid="classihipDevice__t" prot="public">ihipDevice_t</innerclass>
    <innerclass refid="classihipCtxCriticalBase__t" prot="public">ihipCtxCriticalBase_t</innerclass>
    <innerclass refid="classihipCtx__t" prot="public">ihipCtx_t</innerclass>
    <innernamespace refid="namespacehip__internal">hip_internal</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="hip__hcc__internal_8h_1a70c8f29f4be05ef790344253e854ef09" prot="public" static="no">
        <name>USE_IPC</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="39" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1a137aa83ec74421d226a90c92ec032ac9" prot="public" static="no">
        <name>KNRM</name>
        <initializer>&quot;\x1B[0m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="133" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1a66290957baed5df3930ada4cb8caccf1" prot="public" static="no">
        <name>KRED</name>
        <initializer>&quot;\x1B[31m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="134" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1ac081c83b067273757f7a2e54a5957d41" prot="public" static="no">
        <name>KGRN</name>
        <initializer>&quot;\x1B[32m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="135" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1a897b10d246533c95ba86cb79f92e465a" prot="public" static="no">
        <name>KYEL</name>
        <initializer>&quot;\x1B[33m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="136" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1a3f838f2fc3a9a3b434be606fc908964b" prot="public" static="no">
        <name>KBLU</name>
        <initializer>&quot;\x1B[34m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="137" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1a6825f05d3b9d619d91d79d0ef18bb8b2" prot="public" static="no">
        <name>KMAG</name>
        <initializer>&quot;\x1B[35m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="138" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1a32036c94dbb166a3f874b7efc169841f" prot="public" static="no">
        <name>KCYN</name>
        <initializer>&quot;\x1B[36m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="139" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1af0036c8022c9980079ab17e5c87fd478" prot="public" static="no">
        <name>KWHT</name>
        <initializer>&quot;\x1B[37m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="140" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1ade5d19898540ff8f7be743b56cbb60cd" prot="public" static="no">
        <name>STREAM_THREAD_SAFE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="148" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1aca47a17474bf7d13a6a24c951dd60b67" prot="public" static="no">
        <name>CTX_THREAD_SAFE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="151" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1aa74a19056c8bddd1c2a729e60aebff0c" prot="public" static="no">
        <name>DEVICE_THREAD_SAFE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="153" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1a2db01dd4e237312393f57d0ec6bda096" prot="public" static="no">
        <name>COMPILE_HIP_DB</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="158" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1ac4295bd6742b71235f55c28f38a92223" prot="public" static="no">
        <name>COMPILE_HIP_TRACE_API</name>
        <initializer>0x3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="166" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1af7dfd7982afe1c891183ec0fa933439b" prot="public" static="no">
        <name>COMPILE_HIP_ATP_MARKER</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="172" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1a1e1da81d918a228b52fee2ad4bd502d5" prot="public" static="no">
        <name>MARKER_BEGIN</name>
        <param><defname>markerName</defname></param>
        <param><defname>group</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="189" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1a0cb835d4045b15c283f5633573061381" prot="public" static="no">
        <name>MARKER_END</name>
        <param></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="190" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1a2da9a80c22c35b0bd356b51374cb7032" prot="public" static="no">
        <name>RESUME_PROFILING</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="191" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1ab3a03d185dc636192026c85879c518f6" prot="public" static="no">
        <name>STOP_PROFILING</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="192" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1ae4811a3fa9574a7836b8aaa99f553800" prot="public" static="no">
        <name>TRACE_ALL</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="198" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1aa85b669923ed42aea0e48ed84465e34f" prot="public" static="no">
        <name>TRACE_KCMD</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="199" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1ac984f445d086e168caff06408aeb2dd8" prot="public" static="no">
        <name>TRACE_MCMD</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="200" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1aaacaebeb03fd524eb7ca45d14288b634" prot="public" static="no">
        <name>TRACE_MEM</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="201" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1a748a67a89a62b96e99670689d5ecec4a" prot="public" static="no">
        <name>TRACE_SYNC</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="202" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1a868233c82bf3df3d98c51fe2454fd0ef" prot="public" static="no">
        <name>TRACE_QUERY</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="203" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1ad15461e01d96b25ab675f3a45e0d3807" prot="public" static="no">
        <name>DB_API</name>
        <initializer>0 /* 0x01 - shortcut to enable HIP_TRACE_API on single switch */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="208" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1ac0b5a5c19cceefe47bd789c9ace013a1" prot="public" static="no">
        <name>DB_SYNC</name>
        <initializer>1 /* 0x02 - trace synchronization pieces */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="209" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1a0480da71bfa046913ff0df168eb8d29f" prot="public" static="no">
        <name>DB_MEM</name>
        <initializer>2 /* 0x04 - trace memory allocation / deallocation */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="210" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1a14666f6fd2e6fa20562c1b7294c99a58" prot="public" static="no">
        <name>DB_COPY</name>
        <initializer>3 /* 0x08 - trace memory copy and peer commands. . */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="211" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1a98f08e4a0c5bc5ea7f3d7fe796292090" prot="public" static="no">
        <name>DB_MAX_FLAG</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="212" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1a416fdb19f57927de7f282e4d05eba519" prot="public" static="no">
        <name>tprintf</name>
        <param><defname>trace_level</defname></param>
        <param><defname>...</defname></param>
        <initializer>{\
    if (HIP_DB &amp; (1&lt;&lt;(trace_level))) {\
        char msgStr[1000];\
        snprintf(msgStr, 2000, __VA_ARGS__);\
        fprintf (stderr, &quot;  %ship-%s tid:%d:%s%s&quot;, dbName[trace_level]._color, dbName[trace_level]._shortName, tls_tidInfo.tid(), msgStr, KNRM); \
    }\
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="234" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1a7b03bdad4247df3987fb752abc8541eb" prot="public" static="no">
        <name>API_TRACE</name>
        <param><defname>forceTrace</defname></param>
        <param><defname>...</defname></param>
        <initializer>{\
    tls_tidInfo.incApiSeqNum();\
    if (forceTrace || (HIP_PROFILE_API || (COMPILE_HIP_DB &amp;&amp; (HIP_TRACE_API &amp; (1&lt;&lt;TRACE_ALL))))) {\
        std::string apiStr = std::string(__func__) + &quot; (&quot; + ToString(__VA_ARGS__) + &apos;)&apos;;\
        std::string fullStr;\
        recordApiTrace(&amp;fullStr, apiStr);\
        if      (HIP_PROFILE_API == 0x1) {MARKER_BEGIN(__func__, &quot;HIP&quot;) }\
        else if (HIP_PROFILE_API == 0x2) {MARKER_BEGIN(fullStr.c_str(), &quot;HIP&quot;); }\
    }\
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="253" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1a398a084a7629497b148b1ee554e1ae97" prot="public" static="no">
        <name>HIP_INIT</name>
        <param></param>
        <initializer>std::call_once(hip_initialized, ihipInit);\
    ihipCtxStackUpdate();</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="272" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1a81e317cbb3a6c9a1752a37802312bef9" prot="public" static="no">
        <name>HIP_SET_DEVICE</name>
        <param></param>
        <initializer>ihipDeviceSetState();</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="275" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1ac0f54ec98b4a19b7657c0280465b9778" prot="public" static="no">
        <name>HIP_INIT_API</name>
        <param><defname>...</defname></param>
        <initializer>HIP_INIT()\
    API_TRACE(0, __VA_ARGS__);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="283" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1a0f2393df5b0c3c5aaac7eefcee3abc40" prot="public" static="no">
        <name>HIP_INIT_SPECIAL_API</name>
        <param><defname>tbit</defname></param>
        <param><defname>...</defname></param>
        <initializer>HIP_INIT()\
    API_TRACE((HIP_TRACE_API&amp;(1&lt;&lt;tbit)), __VA_ARGS__);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="291" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1a94d60beb6106c8f6057e92a17f766974" prot="public" static="no">
        <name>ihipLogStatus</name>
        <param><defname>hipStatus</defname></param>
        <initializer>({\
        <ref refid="group__GlobalDefs_1gadf5010f6e140a53ecbdf949e73e87594" kindref="member">hipError_t</ref> localHipStatus = hipStatus; /*local copy so hipStatus only evaluated once*/ \
        tls_lastHipError = localHipStatus;\
        \
        if ((COMPILE_HIP_TRACE_API &amp; 0x2) &amp;&amp; HIP_TRACE_API &amp; (1&lt;&lt;TRACE_ALL)) {\
            fprintf(stderr, &quot;  %ship-api tid:%d.%lu %-30s ret=%2d (%s)&gt;&gt;%s\n&quot;, (localHipStatus == 0) ? API_COLOR:KRED, tls_tidInfo.tid(),tls_tidInfo.apiSeqNum(),  __func__, localHipStatus, ihipErrorString(localHipStatus), API_COLOR_END);\
        }\
        if (HIP_PROFILE_API) { MARKER_END(); }\
        localHipStatus;\
    })</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="299" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hip__hcc__internal_8h_1a08dbf650453d45c6e19335b5c48bced4" prot="public" static="no">
        <name>HIP_IPC_RESERVED_SIZE</name>
        <initializer>24</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HIP IPC Handle Size </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="340" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="340" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="hip__hcc__internal_8h_1ad70aced6c661ed8b2b79496d3fe5541e" prot="public" static="no">
        <name>hipEventStatus_t</name>
        <enumvalue id="hip__hcc__internal_8h_1ad70aced6c661ed8b2b79496d3fe5541ea98128961c1536434922bbae55b3a48cd" prot="public">
          <name>hipEventStatusUnitialized</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hip__hcc__internal_8h_1ad70aced6c661ed8b2b79496d3fe5541eaeb2d0ac0586bf6cf09087dbe0a9d9071" prot="public">
          <name>hipEventStatusCreated</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hip__hcc__internal_8h_1ad70aced6c661ed8b2b79496d3fe5541ea20789cefbd5b4beaafe3f8cedc279d2b" prot="public">
          <name>hipEventStatusRecording</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hip__hcc__internal_8h_1ad70aced6c661ed8b2b79496d3fe5541ea6cdc4b339e7e545eb36a9873e9dfcd13" prot="public">
          <name>hipEventStatusComplete</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="598" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="598" bodyend="603"/>
      </memberdef>
      <memberdef kind="enum" id="hip__hcc__internal_8h_1a4b2025303976af7c95c5ed5f1f4e8a1c" prot="public" static="no">
        <name>ihipEventType_t</name>
        <enumvalue id="hip__hcc__internal_8h_1a4b2025303976af7c95c5ed5f1f4e8a1caf52b4d37891f3fc461729652709c5a43" prot="public">
          <name>hipEventTypeIndependent</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hip__hcc__internal_8h_1a4b2025303976af7c95c5ed5f1f4e8a1cafea9b0e18a44c7d6a0f161f1b421d79f" prot="public">
          <name>hipEventTypeStartCommand</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hip__hcc__internal_8h_1a4b2025303976af7c95c5ed5f1f4e8a1cae98dd6517104dd9f44fbeee4797606af" prot="public">
          <name>hipEventTypeStopCommand</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="606" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="606" bodyend="610"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="hip__hcc__internal_8h_1a4dc6a0d7dc2d54c8b8cb2c8c342a8415" prot="public" static="no">
        <type>std::mutex</type>
        <definition>typedef std::mutex StreamMutex</definition>
        <argsstring></argsstring>
        <name>StreamMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="376" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hip__hcc__internal_8h_1a0630b8bef2c99f81bf4a98559f03bdb9" prot="public" static="no">
        <type>std::mutex</type>
        <definition>typedef std::mutex CtxMutex</definition>
        <argsstring></argsstring>
        <name>CtxMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="384" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hip__hcc__internal_8h_1a54d842a0c192e580c266417d8a034906" prot="public" static="no">
        <type>std::mutex</type>
        <definition>typedef std::mutex DeviceMutex</definition>
        <argsstring></argsstring>
        <name>DeviceMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="391" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hip__hcc__internal_8h_1a14cbefc46f1d834365f6fe2c9a55eb50" prot="public" static="no">
        <type><ref refid="classihipStreamCriticalBase__t" kindref="compound">ihipStreamCriticalBase_t</ref>&lt; StreamMutex &gt;</type>
        <definition>typedef ihipStreamCriticalBase_t&lt;StreamMutex&gt; ihipStreamCritical_t</definition>
        <argsstring></argsstring>
        <name>ihipStreamCritical_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="493" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="493" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hip__hcc__internal_8h_1a3f3dc160085c7e5d2e8b7dfa5c6edd18" prot="public" static="no">
        <type><ref refid="classLockedAccessor" kindref="compound">LockedAccessor</ref>&lt; <ref refid="classihipStreamCriticalBase__t" kindref="compound">ihipStreamCritical_t</ref> &gt;</type>
        <definition>typedef LockedAccessor&lt;ihipStreamCritical_t&gt; LockedAccessor_StreamCrit_t</definition>
        <argsstring></argsstring>
        <name>LockedAccessor_StreamCrit_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="494" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="494" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hip__hcc__internal_8h_1a29f2f76a3a9d05269b25810650e94978" prot="public" static="no">
        <type><ref refid="classihipDeviceCriticalBase__t" kindref="compound">ihipDeviceCriticalBase_t</ref>&lt; DeviceMutex &gt;</type>
        <definition>typedef ihipDeviceCriticalBase_t&lt;DeviceMutex&gt; ihipDeviceCritical_t</definition>
        <argsstring></argsstring>
        <name>ihipDeviceCritical_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="674" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="674" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hip__hcc__internal_8h_1abf935f89ee594863396e970088a08108" prot="public" static="no">
        <type><ref refid="classLockedAccessor" kindref="compound">LockedAccessor</ref>&lt; <ref refid="classihipDeviceCriticalBase__t" kindref="compound">ihipDeviceCritical_t</ref> &gt;</type>
        <definition>typedef LockedAccessor&lt;ihipDeviceCritical_t&gt; LockedAccessor_DeviceCrit_t</definition>
        <argsstring></argsstring>
        <name>LockedAccessor_DeviceCrit_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="676" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="676" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hip__hcc__internal_8h_1a503d76ec13d167d0a041d5479150655f" prot="public" static="no">
        <type><ref refid="classihipCtxCriticalBase__t" kindref="compound">ihipCtxCriticalBase_t</ref>&lt; CtxMutex &gt;</type>
        <definition>typedef ihipCtxCriticalBase_t&lt;CtxMutex&gt; ihipCtxCritical_t</definition>
        <argsstring></argsstring>
        <name>ihipCtxCritical_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="778" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="778" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hip__hcc__internal_8h_1acd162ec0aa59267f8f4918c475eb8468" prot="public" static="no">
        <type><ref refid="classLockedAccessor" kindref="compound">LockedAccessor</ref>&lt; <ref refid="classihipCtxCriticalBase__t" kindref="compound">ihipCtxCritical_t</ref> &gt;</type>
        <definition>typedef LockedAccessor&lt;ihipCtxCritical_t&gt; LockedAccessor_CtxCrit_t</definition>
        <argsstring></argsstring>
        <name>LockedAccessor_CtxCrit_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="781" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="781" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="hip__hcc__internal_8h_1af27ee928e1f3e786c464c52839294319" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int release</definition>
        <argsstring></argsstring>
        <name>release</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="46" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hip__hcc__internal_8h_1a8049b329f2663b4572d81e7a9aa8a155" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int HIP_LAUNCH_BLOCKING</definition>
        <argsstring></argsstring>
        <name>HIP_LAUNCH_BLOCKING</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="49" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hip__hcc__internal_8h_1a54d5c40680baecda7ae8406839275a69" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int HIP_API_BLOCKING</definition>
        <argsstring></argsstring>
        <name>HIP_API_BLOCKING</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="50" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hip__hcc__internal_8h_1a1e1c85dbb250f1acfb484c1be1f3b28a" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int HIP_PRINT_ENV</definition>
        <argsstring></argsstring>
        <name>HIP_PRINT_ENV</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="52" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hip__hcc__internal_8h_1acea1669446f60f83052a098464cee32a" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int HIP_PROFILE_API</definition>
        <argsstring></argsstring>
        <name>HIP_PROFILE_API</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="53" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hip__hcc__internal_8h_1a0447877e891565b2757ba4fca8998406" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int HIP_ATP</definition>
        <argsstring></argsstring>
        <name>HIP_ATP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="hip__hcc__internal_8h_1a8eadc52d4f7b612393d41f8c9581a8ca" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int HIP_DB</definition>
        <argsstring></argsstring>
        <name>HIP_DB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="56" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hip__hcc__internal_8h_1a646ea0d58d4d3cb3cce2e8c48eab1939" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int HIP_STAGING_SIZE</definition>
        <argsstring></argsstring>
        <name>HIP_STAGING_SIZE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="hip__hcc__internal_8h_1a834cd74d29c680a1a974a88b5b73ac6a" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int HIP_STREAM_SIGNALS</definition>
        <argsstring></argsstring>
        <name>HIP_STREAM_SIGNALS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="hip__hcc__internal_8h_1a52375928714da2fcf0281c34eccc3ca4" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int HIP_VISIBLE_DEVICES</definition>
        <argsstring></argsstring>
        <name>HIP_VISIBLE_DEVICES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="59" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hip__hcc__internal_8h_1a95d35322c735019e684cc1da08bed2fd" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int HIP_FORCE_P2P_HOST</definition>
        <argsstring></argsstring>
        <name>HIP_FORCE_P2P_HOST</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="60" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hip__hcc__internal_8h_1ac053a0c53b9c93cfec98c6e2f9a4ab6e" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int HIP_HOST_COHERENT</definition>
        <argsstring></argsstring>
        <name>HIP_HOST_COHERENT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="62" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hip__hcc__internal_8h_1aea0f71cb99822e7cfff9b815924c7cde" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int HIP_HIDDEN_FREE_MEM</definition>
        <argsstring></argsstring>
        <name>HIP_HIDDEN_FREE_MEM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="64" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hip__hcc__internal_8h_1a04bfa7d7e9fb44412d2f73a8bc2626f9" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int HIP_SYNC_HOST_ALLOC</definition>
        <argsstring></argsstring>
        <name>HIP_SYNC_HOST_ALLOC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="67" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hip__hcc__internal_8h_1a0e8d70eb20f09424674ebfd07724ac90" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int HIP_SYNC_STREAM_WAIT</definition>
        <argsstring></argsstring>
        <name>HIP_SYNC_STREAM_WAIT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="68" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hip__hcc__internal_8h_1a6bcfd17d46b509b81b86e3362ea61bd8" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int HIP_SYNC_NULL_STREAM</definition>
        <argsstring></argsstring>
        <name>HIP_SYNC_NULL_STREAM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="70" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hip__hcc__internal_8h_1a2c24a46e309f5f39132b858808b22c3c" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int HIP_INIT_ALLOC</definition>
        <argsstring></argsstring>
        <name>HIP_INIT_ALLOC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="71" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hip__hcc__internal_8h_1a1b7a62ed1312d84bec41ac3a0591b627" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int HIP_FORCE_NULL_STREAM</definition>
        <argsstring></argsstring>
        <name>HIP_FORCE_NULL_STREAM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="72" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hip__hcc__internal_8h_1a98ead8a3566b42af91581a7c1a50408e" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int HCC_OPT_FLUSH</definition>
        <argsstring></argsstring>
        <name>HCC_OPT_FLUSH</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="76" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hip__hcc__internal_8h_1a40479a2de3cfe04b98028668d3297ed5" prot="public" static="no" mutable="no">
        <type>thread_local <ref refid="group__GlobalDefs_1gadf5010f6e140a53ecbdf949e73e87594" kindref="member">hipError_t</ref></type>
        <definition>thread_local hipError_t tls_lastHipError</definition>
        <argsstring></argsstring>
        <name>tls_lastHipError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="119" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hip__hcc__internal_8h_1a3f54bc9c8ffa56d0d0783a2aef20a60d" prot="public" static="no" mutable="no">
        <type>thread_local <ref refid="classTidInfo" kindref="compound">TidInfo</ref></type>
        <definition>thread_local TidInfo tls_tidInfo</definition>
        <argsstring></argsstring>
        <name>tls_tidInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="120" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hip__hcc__internal_8h_1aa705993e8e4b5e0fa385e3275dd0f75a" prot="public" static="no" mutable="no">
        <type>thread_local bool</type>
        <definition>thread_local bool tls_getPrimaryCtx</definition>
        <argsstring></argsstring>
        <name>tls_getPrimaryCtx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="121" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_context.cpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hip__hcc__internal_8h_1a3b90ef2f2d7c810029b7ee76e1bbbabe" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structProfTrigger" kindref="compound">ProfTrigger</ref> &gt;</type>
        <definition>std::vector&lt;ProfTrigger&gt; g_dbStartTriggers</definition>
        <argsstring></argsstring>
        <name>g_dbStartTriggers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="123" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hip__hcc__internal_8h_1ab4087d6ee4d028cff99fef20daf3e3e3" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structProfTrigger" kindref="compound">ProfTrigger</ref> &gt;</type>
        <definition>std::vector&lt;ProfTrigger&gt; g_dbStopTriggers</definition>
        <argsstring></argsstring>
        <name>g_dbStopTriggers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="124" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hip__hcc__internal_8h_1ae113b586dc931f0a55eee6312a37220b" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* API_COLOR</definition>
        <argsstring></argsstring>
        <name>API_COLOR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="142" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hip__hcc__internal_8h_1a5a2b20416f6d33114f94c53addcec0fa" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* API_COLOR_END</definition>
        <argsstring></argsstring>
        <name>API_COLOR_END</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="143" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hip__hcc__internal_8h_1aebf1320597bf1e2a3f5dddfa66da01c9" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structDbName" kindref="compound">DbName</ref></type>
        <definition>const DbName dbName[]</definition>
        <argsstring>[]</argsstring>
        <name>dbName</name>
        <initializer>=
{
    {KGRN, &quot;api&quot;}, 
    {KYEL, &quot;sync&quot;},
    {KCYN, &quot;mem&quot;},
    {KMAG, &quot;copy&quot;},
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="223" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hip__hcc__internal_8h_1a3ccbac0c243625397e1f0ede5ab93a0c" prot="public" static="no" mutable="no">
        <type>const <ref refid="classihipStream__t" kindref="compound">hipStream_t</ref></type>
        <definition>const hipStream_t hipStreamNull</definition>
        <argsstring></argsstring>
        <name>hipStreamNull</name>
        <initializer>= 0x0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="334" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hip__hcc__internal_8h_1aae9776b40d05a39ead2dd0df7d82e46d" prot="public" static="no" mutable="no">
        <type>std::once_flag</type>
        <definition>std::once_flag hip_initialized</definition>
        <argsstring></argsstring>
        <name>hip_initialized</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="840" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hip__hcc__internal_8h_1a1b38b36a8c253987e835cc92fcaa2d59" prot="public" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned g_deviceCnt</definition>
        <argsstring></argsstring>
        <name>g_deviceCnt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="841" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hip__hcc__internal_8h_1a51cbfc1cd7ef93745edcd0486cb2257e" prot="public" static="no" mutable="no">
        <type>hsa_agent_t</type>
        <definition>hsa_agent_t g_cpu_agent</definition>
        <argsstring></argsstring>
        <name>g_cpu_agent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="842" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hip__hcc__internal_8h_1a5b8ea47b77c1eed6d1e52fd5ed2be71e" prot="public" static="no" mutable="no">
        <type>hsa_agent_t *</type>
        <definition>hsa_agent_t* g_allAgents</definition>
        <argsstring></argsstring>
        <name>g_allAgents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="843" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="hip__hcc__internal_8h_1ad26f03454ac094309a835ada39e8615d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void recordApiTrace</definition>
        <argsstring>(std::string *fullStr, const std::string &amp;apiStr)</argsstring>
        <name>recordApiTrace</name>
        <param>
          <type>std::string *</type>
          <declname>fullStr</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>apiStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="250" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="159" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="hip__hcc__internal_8h_1aeabe36aa946ab6100b26602c7e3c23cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ihipInit</definition>
        <argsstring>()</argsstring>
        <name>ihipInit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="847" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="1324" bodyend="1393"/>
      </memberdef>
      <memberdef kind="function" id="hip__hcc__internal_8h_1aec94ecca818683e73dacf7023e9e0978" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ihipErrorString</definition>
        <argsstring>(hipError_t)</argsstring>
        <name>ihipErrorString</name>
        <param>
          <type><ref refid="group__GlobalDefs_1gadf5010f6e140a53ecbdf949e73e87594" kindref="member">hipError_t</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="848" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="1599" bodyend="1665"/>
      </memberdef>
      <memberdef kind="function" id="hip__hcc__internal_8h_1ae8d1ec6d95d9ca50e98505af1b4da055" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classihipCtx__t" kindref="compound">ihipCtx_t</ref> *</type>
        <definition>ihipCtx_t* ihipGetTlsDefaultCtx</definition>
        <argsstring>()</argsstring>
        <name>ihipGetTlsDefaultCtx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="849" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="223" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="hip__hcc__internal_8h_1a810fc134741863a7749cc4eacb427b30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ihipSetTlsDefaultCtx</definition>
        <argsstring>(ihipCtx_t *ctx)</argsstring>
        <name>ihipSetTlsDefaultCtx</name>
        <param>
          <type><ref refid="classihipCtx__t" kindref="compound">ihipCtx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="850" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="212" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="hip__hcc__internal_8h_1a8b4a69d35d2651a9921ccbba8625fdd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__GlobalDefs_1gadf5010f6e140a53ecbdf949e73e87594" kindref="member">hipError_t</ref></type>
        <definition>hipError_t ihipSynchronize</definition>
        <argsstring>(void)</argsstring>
        <name>ihipSynchronize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="851" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="232" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="hip__hcc__internal_8h_1ac0840d9d5f25e55ead9352e6f07b41ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ihipCtxStackUpdate</definition>
        <argsstring>()</argsstring>
        <name>ihipCtxStackUpdate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="852" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_context.cpp" bodystart="36" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="hip__hcc__internal_8h_1adec036ec2061de1cc23bfa282cf83550" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__GlobalDefs_1gadf5010f6e140a53ecbdf949e73e87594" kindref="member">hipError_t</ref></type>
        <definition>hipError_t ihipDeviceSetState</definition>
        <argsstring>()</argsstring>
        <name>ihipDeviceSetState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="853" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_device.cpp" bodystart="185" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="hip__hcc__internal_8h_1aa0f4bb7f554bbb19f99a53292d2c2510" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classihipDevice__t" kindref="compound">ihipDevice_t</ref> *</type>
        <definition>ihipDevice_t* ihipGetDevice</definition>
        <argsstring>(int)</argsstring>
        <name>ihipGetDevice</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="855" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="195" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="hip__hcc__internal_8h_1a3fbe38c4899396a8862bbd0255a7734e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classihipCtx__t" kindref="compound">ihipCtx_t</ref> *</type>
        <definition>ihipCtx_t* ihipGetPrimaryCtx</definition>
        <argsstring>(unsigned deviceIndex)</argsstring>
        <name>ihipGetPrimaryCtx</name>
        <param>
          <type>unsigned</type>
          <declname>deviceIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="856" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="204" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="hip__hcc__internal_8h_1af93058da21180b1454661fb3da0fb2ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classihipStream__t" kindref="compound">hipStream_t</ref></type>
        <definition>hipStream_t ihipSyncAndResolveStream</definition>
        <argsstring>(hipStream_t)</argsstring>
        <name>ihipSyncAndResolveStream</name>
        <param>
          <type><ref refid="classihipStream__t" kindref="compound">hipStream_t</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="859" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="1404" bodyend="1454"/>
      </memberdef>
      <memberdef kind="function" id="hip__hcc__internal_8h_1a87ec2e4405353137e645ba1e55f25ff6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const ihipStream_t &amp;s)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classihipStream__t" kindref="compound">ihipStream_t</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="862" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="862" bodyend="869"/>
      </memberdef>
      <memberdef kind="function" id="hip__hcc__internal_8h_1a5d6f2b517a091a0b64c4895b62372fc9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const dim3 &amp;s)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structdim3" kindref="compound">dim3</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="871" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="871" bodyend="881"/>
      </memberdef>
      <memberdef kind="function" id="hip__hcc__internal_8h_1ae0a2f4133e9965ece8469608519089d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const gl_dim3 &amp;s)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const gl_dim3 &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="883" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="883" bodyend="893"/>
      </memberdef>
      <memberdef kind="function" id="hip__hcc__internal_8h_1a5d472cef244a98f0dd13fccc9c0a9fd8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const hipEvent_t &amp;e)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classihipEvent__t" kindref="compound">hipEvent_t</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="896" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="896" bodyend="900"/>
      </memberdef>
      <memberdef kind="function" id="hip__hcc__internal_8h_1a3ee3ad5d9b790b7c001cc87baea9df14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const ihipCtx_t *c)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classihipCtx__t" kindref="compound">ihipCtx_t</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" line="902" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h" bodystart="902" bodyend="907"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">Copyright<sp/>(c)<sp/>2015<sp/>-<sp/>present<sp/>Advanced<sp/>Micro<sp/>Devices,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="5"><highlight class="comment">of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="6"><highlight class="comment">in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="7"><highlight class="comment">to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="8"><highlight class="comment">copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="9"><highlight class="comment">furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment">The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in</highlight></codeline>
<codeline lineno="12"><highlight class="comment">all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="15"><highlight class="comment">IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="16"><highlight class="comment">FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="17"><highlight class="comment">AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="18"><highlight class="comment">LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="19"><highlight class="comment">OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN</highlight></codeline>
<codeline lineno="20"><highlight class="comment">THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HIP_SRC_HIP_HCC_INTERNAL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HIP_SRC_HIP_HCC_INTERNAL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hc.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hsa/hsa.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hsa/hsa_ext_amd.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hip/hip_runtime.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hip_util.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;env.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__HCC__)<sp/>&amp;&amp;<sp/>(__hcc_workweek__<sp/>&lt;<sp/>16354)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#error(&quot;This<sp/>version<sp/>of<sp/>HIP<sp/>requires<sp/>a<sp/>newer<sp/>version<sp/>of<sp/>HCC.&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USE_IPC<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//---</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Environment<sp/>variables:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Intended<sp/>to<sp/>distinguish<sp/>whether<sp/>an<sp/>environment<sp/>variable<sp/>should<sp/>be<sp/>visible<sp/>only<sp/>in<sp/>debug<sp/>mode,<sp/>or<sp/>in<sp/>debug+release.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//static<sp/>const<sp/>int<sp/>debug<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>release;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO<sp/>-<sp/>this<sp/>blocks<sp/>both<sp/>kernels<sp/>and<sp/>memory<sp/>ops.<sp/><sp/>Perhaps<sp/>should<sp/>have<sp/>separate<sp/>env<sp/>var<sp/>for<sp/>kernels?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HIP_LAUNCH_BLOCKING;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HIP_API_BLOCKING;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HIP_PRINT_ENV;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HIP_PROFILE_API;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//extern<sp/>int<sp/>HIP_TRACE_API;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HIP_ATP;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HIP_DB;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HIP_STAGING_SIZE;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>size<sp/>of<sp/>staging<sp/>buffers,<sp/>in<sp/>KB<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HIP_STREAM_SIGNALS;<sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>signals<sp/>to<sp/>allocate<sp/>at<sp/>stream<sp/>creation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HIP_VISIBLE_DEVICES;<sp/></highlight><highlight class="comment">/*<sp/>Contains<sp/>a<sp/>comma-separated<sp/>sequence<sp/>of<sp/>GPU<sp/>identifiers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HIP_FORCE_P2P_HOST;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HIP_HOST_COHERENT;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HIP_HIDDEN_FREE_MEM;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//---</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Chicken<sp/>bits<sp/>for<sp/>disabling<sp/>functionality<sp/>to<sp/>work<sp/>around<sp/>potential<sp/>issues:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HIP_SYNC_HOST_ALLOC;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HIP_SYNC_STREAM_WAIT;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HIP_SYNC_NULL_STREAM;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HIP_INIT_ALLOC;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HIP_FORCE_NULL_STREAM;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO<sp/>-<sp/>remove<sp/>when<sp/>this<sp/>is<sp/>standard<sp/>behavior.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HCC_OPT_FLUSH;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Class<sp/>to<sp/>assign<sp/>a<sp/>short<sp/>TID<sp/>to<sp/>each<sp/>new<sp/>thread,<sp/>for<sp/>HIP<sp/>debugging<sp/>purposes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="classTidInfo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classTidInfo" kindref="compound">TidInfo</ref><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTidInfo" kindref="compound">TidInfo</ref>()<sp/>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tid()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_shortTid;<sp/>};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>incApiSeqNum()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>++_apiSeqNum;<sp/>};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>apiSeqNum()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_apiSeqNum;<sp/>};</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_shortTid;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>monotonically<sp/>increasing<sp/>API<sp/>sequence<sp/>number<sp/>for<sp/>this<sp/>threa.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>_apiSeqNum;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="structProfTrigger" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structProfTrigger" kindref="compound">ProfTrigger</ref><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>MAX_TRIGGER<sp/>=<sp/>std::numeric_limits&lt;uint64_t&gt;::max();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Enabling<sp/>tracing<sp/>for<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter=_profTrigger.begin();<sp/>iter<sp/>!=<sp/>_profTrigger.end();<sp/>iter++)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;tid:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tid<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*iter<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>nextTrigger()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_profTrigger.empty()<sp/>?<sp/>MAX_TRIGGER<sp/>:<sp/>_profTrigger.back();<sp/>};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>add(uint64_t<sp/>trigger)<sp/>{<sp/>_profTrigger.push_back(trigger);<sp/>};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sort()<sp/>{<sp/>std::sort<sp/>(_profTrigger.begin(),<sp/>_profTrigger.end(),<sp/>std::greater&lt;int&gt;());<sp/>};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint64_t&gt;<sp/>_profTrigger;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//---</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//Extern<sp/>tls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>thread_local<sp/><ref refid="group__GlobalDefs_1gadf5010f6e140a53ecbdf949e73e87594" kindref="member">hipError_t</ref><sp/>tls_lastHipError;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>thread_local<sp/><ref refid="classTidInfo" kindref="compound">TidInfo</ref><sp/>tls_tidInfo;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>thread_local<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tls_getPrimaryCtx;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::vector&lt;ProfTrigger&gt;<sp/>g_dbStartTriggers;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::vector&lt;ProfTrigger&gt;<sp/>g_dbStopTriggers;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//---</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//Forward<sp/>defs:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classihipStream__t" kindref="compound">ihipStream_t</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classihipDevice__t" kindref="compound">ihipDevice_t</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classihipCtx__t" kindref="compound">ihipCtx_t</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Color<sp/>defs<sp/>for<sp/>debug<sp/>messages:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KNRM<sp/><sp/>&quot;\x1B[0m&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KRED<sp/><sp/>&quot;\x1B[31m&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KGRN<sp/><sp/>&quot;\x1B[32m&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KYEL<sp/><sp/>&quot;\x1B[33m&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KBLU<sp/><sp/>&quot;\x1B[34m&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KMAG<sp/><sp/>&quot;\x1B[35m&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KCYN<sp/><sp/>&quot;\x1B[36m&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KWHT<sp/><sp/>&quot;\x1B[37m&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*API_COLOR;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*API_COLOR_END;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>set,<sp/>thread-safety<sp/>is<sp/>enforced<sp/>on<sp/>all<sp/>stream<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Stream<sp/>functions<sp/>will<sp/>acquire<sp/>a<sp/>mutex<sp/>before<sp/>entering<sp/>critical<sp/>sections.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STREAM_THREAD_SAFE<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CTX_THREAD_SAFE<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEVICE_THREAD_SAFE<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compile<sp/>debug<sp/>trace<sp/>mode<sp/>-<sp/>this<sp/>prints<sp/>debug<sp/>messages<sp/>to<sp/>stderr<sp/>when<sp/>env<sp/>var<sp/>HIP_DB<sp/>is<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//<sp/>May<sp/>be<sp/>set<sp/>to<sp/>0<sp/>to<sp/>remove<sp/>debug<sp/>if<sp/>checks<sp/>-<sp/>possible<sp/>code<sp/>size<sp/>and<sp/>performance<sp/>difference?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COMPILE_HIP_DB<sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compile<sp/>HIP<sp/>tracing<sp/>capability.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">//<sp/>0x1<sp/>=<sp/>print<sp/>a<sp/>string<sp/>at<sp/>function<sp/>entry<sp/>with<sp/>arguments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//<sp/>0x2<sp/>=<sp/>prints<sp/>a<sp/>simple<sp/>message<sp/>with<sp/>function<sp/>name<sp/>+<sp/>return<sp/>code<sp/>when<sp/>function<sp/>exits.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">//<sp/>0x3<sp/>=<sp/>print<sp/>both.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Must<sp/>be<sp/>enabled<sp/>at<sp/>runtime<sp/>with<sp/>HIP_TRACE_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COMPILE_HIP_TRACE_API<sp/>0x3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compile<sp/>code<sp/>that<sp/>generates<sp/>trace<sp/>markers<sp/>for<sp/>CodeXL<sp/>ATP<sp/>at<sp/>HIP<sp/>function<sp/>begin/end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ATP<sp/>is<sp/>standard<sp/>CodeXL<sp/>format<sp/>that<sp/>includes<sp/>timestamps<sp/>for<sp/>kernels,<sp/>HSA<sp/>RT<sp/>APIs,<sp/>and<sp/>HIP<sp/>APIs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>COMPILE_HIP_ATP_MARKER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COMPILE_HIP_ATP_MARKER<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compile<sp/>support<sp/>for<sp/>trace<sp/>markers<sp/>that<sp/>are<sp/>displayed<sp/>on<sp/>CodeXL<sp/>GUI<sp/>at<sp/>start/stop<sp/>of<sp/>each<sp/>function<sp/>boundary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO<sp/>-<sp/>currently<sp/>we<sp/>print<sp/>the<sp/>trace<sp/>message<sp/>at<sp/>the<sp/>beginning.<sp/>if<sp/>we<sp/>waited,<sp/>we<sp/>could<sp/>also<sp/>tls_tidInfo<sp/>return<sp/>codes,<sp/>and<sp/>any<sp/>values<sp/>returned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//<sp/>through<sp/>ptr-to-args<sp/>(ie<sp/>the<sp/>pointers<sp/>allocated<sp/>by<sp/>hipMalloc).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>COMPILE_HIP_ATP_MARKER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CXLActivityLogger.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MARKER_BEGIN(markerName,group)<sp/>amdtBeginMarker(markerName,<sp/>group,<sp/>nullptr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MARKER_END()<sp/>amdtEndMarker();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESUME_PROFILING<sp/>amdtResumeProfiling(AMDT_ALL_PROFILING);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STOP_PROFILING<sp/><sp/><sp/>amdtStopProfiling(AMDT_ALL_PROFILING);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Swallow<sp/>scoped<sp/>markers:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MARKER_BEGIN(markerName,group)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MARKER_END()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESUME_PROFILING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STOP_PROFILING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">//---</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//HIP<sp/>Trace<sp/>modes<sp/>-<sp/>use<sp/>with<sp/>HIP_TRACE_API=...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TRACE_ALL<sp/><sp/><sp/>0<sp/><sp/>//<sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TRACE_KCMD<sp/><sp/>1<sp/><sp/>//<sp/>0x02,<sp/>kernel<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TRACE_MCMD<sp/><sp/>2<sp/><sp/>//<sp/>0x04,<sp/>memory<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TRACE_MEM<sp/><sp/><sp/>3<sp/><sp/>//<sp/>0x08,<sp/>memory<sp/>allocation<sp/>or<sp/>deallocation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TRACE_SYNC<sp/><sp/>4<sp/><sp/>//<sp/>0x10,<sp/>synchronization<sp/>(host<sp/>or<sp/>hipStreamWaitEvent)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TRACE_QUERY<sp/>5<sp/><sp/>//<sp/>0x20,<sp/>hipEventRecord,<sp/>hipEventQuery,<sp/>hipStreamQuery</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//---</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//HIP_DB<sp/>Debug<sp/>flags:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DB_API<sp/><sp/><sp/><sp/>0<sp/></highlight><highlight class="comment">/*<sp/>0x01<sp/>-<sp/>shortcut<sp/>to<sp/>enable<sp/>HIP_TRACE_API<sp/>on<sp/>single<sp/>switch<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DB_SYNC<sp/><sp/><sp/>1<sp/></highlight><highlight class="comment">/*<sp/>0x02<sp/>-<sp/>trace<sp/>synchronization<sp/>pieces<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DB_MEM<sp/><sp/><sp/><sp/>2<sp/></highlight><highlight class="comment">/*<sp/>0x04<sp/>-<sp/>trace<sp/>memory<sp/>allocation<sp/>/<sp/>deallocation<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DB_COPY<sp/><sp/><sp/>3<sp/></highlight><highlight class="comment">/*<sp/>0x08<sp/>-<sp/>trace<sp/>memory<sp/>copy<sp/>and<sp/>peer<sp/>commands.<sp/>.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DB_MAX_FLAG<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>adding<sp/>a<sp/>new<sp/>debug<sp/>flag,<sp/>also<sp/>add<sp/>to<sp/>the<sp/>char<sp/>name<sp/>table<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="structDbName" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structDbName" kindref="compound">DbName</ref><sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_color;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*_shortName;</highlight></codeline>
<codeline lineno="220"><highlight class="normal">};</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>table<sp/>must<sp/>be<sp/>kept<sp/>in-sync<sp/>with<sp/>the<sp/>defines<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDbName" kindref="compound">DbName</ref><sp/>dbName<sp/>[]<sp/>=</highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>{KGRN,<sp/></highlight><highlight class="stringliteral">&quot;api&quot;</highlight><highlight class="normal">},<sp/></highlight><highlight class="comment">//<sp/>not<sp/>used,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>{KYEL,<sp/></highlight><highlight class="stringliteral">&quot;sync&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>{KCYN,<sp/></highlight><highlight class="stringliteral">&quot;mem&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>{KMAG,<sp/></highlight><highlight class="stringliteral">&quot;copy&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="229"><highlight class="normal">};</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>COMPILE_HIP_DB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>tprintf(trace_level,<sp/>...)<sp/>{\</highlight></codeline>
<codeline lineno="235"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(HIP_DB<sp/>&amp;<sp/>(1&lt;&lt;(trace_level)))<sp/>{\</highlight></codeline>
<codeline lineno="236"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>msgStr[1000];\</highlight></codeline>
<codeline lineno="237"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(msgStr,<sp/>2000,<sp/>__VA_ARGS__);\</highlight></codeline>
<codeline lineno="238"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/>&quot;<sp/><sp/>%ship-%s<sp/>tid:%d:%s%s&quot;,<sp/>dbName[trace_level]._color,<sp/>dbName[trace_level]._shortName,<sp/>tls_tidInfo.tid(),<sp/>msgStr,<sp/>KNRM);<sp/>\</highlight></codeline>
<codeline lineno="239"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="240"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Compile<sp/>to<sp/>empty<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>tprintf(trace_level,<sp/>...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment">//---</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>recordApiTrace(std::string<sp/>*fullStr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;apiStr);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>COMPILE_HIP_ATP_MARKER<sp/>||<sp/>(COMPILE_HIP_TRACE_API<sp/>&amp;<sp/>0x1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>API_TRACE(forceTrace,<sp/>...)\</highlight></codeline>
<codeline lineno="254"><highlight class="preprocessor">{\</highlight></codeline>
<codeline lineno="255"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>tls_tidInfo.incApiSeqNum();\</highlight></codeline>
<codeline lineno="256"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(forceTrace<sp/>||<sp/>(HIP_PROFILE_API<sp/>||<sp/>(COMPILE_HIP_DB<sp/>&amp;&amp;<sp/>(HIP_TRACE_API<sp/>&amp;<sp/>(1&lt;&lt;TRACE_ALL)))))<sp/>{\</highlight></codeline>
<codeline lineno="257"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>apiStr<sp/>=<sp/>std::string(__func__)<sp/>+<sp/>&quot;<sp/>(&quot;<sp/>+<sp/>ToString(__VA_ARGS__)<sp/>+<sp/>&apos;)&apos;;\</highlight></codeline>
<codeline lineno="258"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>fullStr;\</highlight></codeline>
<codeline lineno="259"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recordApiTrace(&amp;fullStr,<sp/>apiStr);\</highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/><sp/><sp/><sp/><sp/><sp/>(HIP_PROFILE_API<sp/>==<sp/>0x1)<sp/>{MARKER_BEGIN(__func__,<sp/>&quot;HIP&quot;)<sp/>}\</highlight></codeline>
<codeline lineno="261"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(HIP_PROFILE_API<sp/>==<sp/>0x2)<sp/>{MARKER_BEGIN(fullStr.c_str(),<sp/>&quot;HIP&quot;);<sp/>}\</highlight></codeline>
<codeline lineno="262"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="263"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Swallow<sp/>API_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>API_TRACE(IS_CMD,<sp/>...)\</highlight></codeline>
<codeline lineno="267"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>tls_tidInfo.incApiSeqNum();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Just<sp/>initialize<sp/>the<sp/>HIP<sp/>runtime,<sp/>but<sp/>don&apos;t<sp/>log<sp/>any<sp/>trace<sp/>information.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HIP_INIT()\</highlight></codeline>
<codeline lineno="273"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>std::call_once(hip_initialized,<sp/>ihipInit);\</highlight></codeline>
<codeline lineno="274"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ihipCtxStackUpdate();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HIP_SET_DEVICE()\</highlight></codeline>
<codeline lineno="276"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ihipDeviceSetState();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>macro<sp/>should<sp/>be<sp/>called<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>every<sp/>HIP<sp/>API.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>initializes<sp/>the<sp/>hip<sp/>runtime<sp/>(exactly<sp/>once),<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">//<sp/>generates<sp/>a<sp/>trace<sp/>string<sp/>that<sp/>can<sp/>be<sp/>output<sp/>to<sp/>stderr<sp/>or<sp/>to<sp/>ATP<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HIP_INIT_API(...)<sp/>\</highlight></codeline>
<codeline lineno="284"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>HIP_INIT()\</highlight></codeline>
<codeline lineno="285"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>API_TRACE(0,<sp/>__VA_ARGS__);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Like<sp/>above,<sp/>but<sp/>will<sp/>trace<sp/>with<sp/>a<sp/>specified<sp/>&quot;special&quot;<sp/>bit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Replace<sp/>HIP_INIT_API<sp/>with<sp/>this<sp/>call<sp/>inside<sp/>HIP<sp/>APIs<sp/>that<sp/>launch<sp/>work<sp/>on<sp/>the<sp/>GPU:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment">//<sp/>kernel<sp/>launches,<sp/>copy<sp/>commands,<sp/>memory<sp/>sets,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HIP_INIT_SPECIAL_API(tbit,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="292"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>HIP_INIT()\</highlight></codeline>
<codeline lineno="293"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>API_TRACE((HIP_TRACE_API&amp;(1&lt;&lt;tbit)),<sp/>__VA_ARGS__);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>macro<sp/>should<sp/>be<sp/>called<sp/>at<sp/>the<sp/>end<sp/>of<sp/>every<sp/>HIP<sp/>API,<sp/>and<sp/>only<sp/>at<sp/>the<sp/>end<sp/>of<sp/>top-level<sp/>hip<sp/>APIS<sp/>(not<sp/>internal<sp/>hip)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>has<sp/>dual<sp/>function:<sp/>logs<sp/>the<sp/>last<sp/>error<sp/>returned<sp/>for<sp/>use<sp/>by<sp/>hipGetLastError,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>also<sp/>prints<sp/>the<sp/>closing<sp/>message<sp/>when<sp/>the<sp/>debug<sp/>trace<sp/>is<sp/>enabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ihipLogStatus(hipStatus)<sp/>\</highlight></codeline>
<codeline lineno="300"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>({\</highlight></codeline>
<codeline lineno="301"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hipError_t<sp/>localHipStatus<sp/>=<sp/>hipStatus;<sp/></highlight><highlight class="comment">/*local<sp/>copy<sp/>so<sp/>hipStatus<sp/>only<sp/>evaluated<sp/>once*/</highlight><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="302"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tls_lastHipError<sp/>=<sp/>localHipStatus;\</highlight></codeline>
<codeline lineno="303"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="304"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((COMPILE_HIP_TRACE_API<sp/>&amp;<sp/>0x2)<sp/>&amp;&amp;<sp/>HIP_TRACE_API<sp/>&amp;<sp/>(1&lt;&lt;TRACE_ALL))<sp/>{\</highlight></codeline>
<codeline lineno="305"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/>&quot;<sp/><sp/>%ship-api<sp/>tid:%d.%lu<sp/>%-30s<sp/>ret=%2d<sp/>(%s)&gt;&gt;%s\n&quot;,<sp/>(localHipStatus<sp/>==<sp/>0)<sp/>?<sp/>API_COLOR:KRED,<sp/>tls_tidInfo.tid(),tls_tidInfo.apiSeqNum(),<sp/><sp/>__func__,<sp/>localHipStatus,<sp/>ihipErrorString(localHipStatus),<sp/>API_COLOR_END);\</highlight></codeline>
<codeline lineno="306"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="307"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(HIP_PROFILE_API)<sp/>{<sp/>MARKER_END();<sp/>}\</highlight></codeline>
<codeline lineno="308"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localHipStatus;\</highlight></codeline>
<codeline lineno="309"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>})</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="classihipException" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classihipException" kindref="compound">ihipException</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::exception</highlight></codeline>
<codeline lineno="317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classihipException" kindref="compound">ihipException</ref>(<ref refid="group__GlobalDefs_1gadf5010f6e140a53ecbdf949e73e87594" kindref="member">hipError_t</ref><sp/>e)<sp/>:<sp/>_code(e)<sp/>{};</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__GlobalDefs_1gadf5010f6e140a53ecbdf949e73e87594" kindref="member">hipError_t</ref><sp/>_code;</highlight></codeline>
<codeline lineno="322"><highlight class="normal">};</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classihipStream__t" kindref="compound">hipStream_t</ref><sp/>hipStreamNull<sp/>=<sp/>0x0;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="preprocessor">#define<sp/>HIP_IPC_RESERVED_SIZE<sp/>24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="classihipIpcMemHandle__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classihipIpcMemHandle__t" kindref="compound">ihipIpcMemHandle_t</ref></highlight></codeline>
<codeline lineno="342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_IPC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="classihipIpcMemHandle__t_1af2142ab7d9f820acbad7638428509d42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>hsa_amd_ipc_memory_t<sp/><ref refid="classihipIpcMemHandle__t_1af2142ab7d9f820acbad7638428509d42" kindref="member">ipc_handle</ref>;<sp/></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>psize;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>reserved[HIP_IPC_RESERVED_SIZE];</highlight></codeline>
<codeline lineno="349"><highlight class="normal">};</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="classihipModule__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classihipModule__t" kindref="compound">ihipModule_t</ref><sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>hsa_executable_t<sp/>executable;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>hsa_code_object_t<sp/>object;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>std::string<sp/>fileName;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>std::list&lt;hipFunction_t&gt;<sp/>funcTrack;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><ref refid="classihipModule__t" kindref="compound">ihipModule_t</ref>()<sp/>:<sp/>executable(),<sp/>object(),<sp/>fileName(),<sp/>ptr(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">),<sp/>size(0)<sp/>{}</highlight></codeline>
<codeline lineno="361"><highlight class="normal">};</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="comment">//---</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Used<sp/>to<sp/>remove<sp/>lock,<sp/>for<sp/>performance<sp/>or<sp/>stimulating<sp/>bugs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="classFakeMutex" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classFakeMutex" kindref="compound">FakeMutex</ref></highlight></codeline>
<codeline lineno="367"><highlight class="normal">{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lock()<sp/>{<sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>try_lock()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unlock()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal">};</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>STREAM_THREAD_SAFE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::mutex<sp/>StreamMutex;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="preprocessor">#warning<sp/>&quot;Stream<sp/>thread-safe<sp/>disabled&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classFakeMutex" kindref="compound">FakeMutex</ref><sp/>StreamMutex;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pair<sp/>Device<sp/>and<sp/>Ctx<sp/>together,<sp/>these<sp/>could<sp/>also<sp/>be<sp/>toggled<sp/>separately<sp/>if<sp/>desired.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CTX_THREAD_SAFE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::mutex<sp/>CtxMutex;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classFakeMutex" kindref="compound">FakeMutex</ref><sp/>CtxMutex;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor">#warning<sp/>&quot;Ctx<sp/>thread-safe<sp/>disabled&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>DEVICE_THREAD_SAFE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::mutex<sp/>DeviceMutex;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classFakeMutex" kindref="compound">FakeMutex</ref><sp/>DeviceMutex;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="preprocessor">#warning<sp/>&quot;Device<sp/>thread-safe<sp/>disabled&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="comment">//---</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Protects<sp/>access<sp/>to<sp/>the<sp/>member<sp/>_data<sp/>with<sp/>a<sp/>lock<sp/>acquired<sp/>on<sp/>contruction/destruction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="comment">//<sp/>T<sp/>must<sp/>contain<sp/>a<sp/>_mutex<sp/>field<sp/>which<sp/>meets<sp/>the<sp/>BasicLockable<sp/>requirements<sp/>(lock/unlock)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="402" refid="classLockedAccessor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classLockedAccessor" kindref="compound">LockedAccessor</ref></highlight></codeline>
<codeline lineno="403"><highlight class="normal">{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classLockedAccessor" kindref="compound">LockedAccessor</ref>(T<sp/>&amp;criticalData,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>autoUnlock=</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>:</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_criticalData(&amp;criticalData),</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_autoUnlock(autoUnlock)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tprintf(DB_SYNC,<sp/></highlight><highlight class="stringliteral">&quot;locking<sp/>criticalData=%p<sp/>for<sp/>%s..\n&quot;</highlight><highlight class="normal">,<sp/>_criticalData,<sp/>ToString(_criticalData-&gt;_parent).c_str());</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_criticalData-&gt;_mutex.lock();</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="classLockedAccessor" kindref="compound">LockedAccessor</ref>()</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_autoUnlock)<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tprintf(DB_SYNC,<sp/></highlight><highlight class="stringliteral">&quot;auto-unlocking<sp/>criticalData=%p<sp/>for<sp/>%s...\n&quot;</highlight><highlight class="normal">,<sp/>_criticalData,<sp/>ToString(_criticalData-&gt;_parent).c_str());</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_criticalData-&gt;_mutex.unlock();</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unlock()</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tprintf(DB_SYNC,<sp/></highlight><highlight class="stringliteral">&quot;unlocking<sp/>criticalData=%p<sp/>for<sp/>%s...\n&quot;</highlight><highlight class="normal">,<sp/>_criticalData,<sp/>ToString(_criticalData-&gt;_parent).c_str());</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_criticalData-&gt;_mutex.unlock();</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Syntactic<sp/>sugar<sp/>so<sp/>-&gt;<sp/>can<sp/>be<sp/>used<sp/>to<sp/>get<sp/>the<sp/>underlying<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>*operator-&gt;()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>_criticalData;<sp/>};</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*_criticalData;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_autoUnlock;</highlight></codeline>
<codeline lineno="434"><highlight class="normal">};</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MUTEX_TYPE&gt;</highlight></codeline>
<codeline lineno="438" refid="structLockedBase" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structLockedBase" kindref="compound">LockedBase</ref><sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Experts-only<sp/>interface<sp/>for<sp/>explicit<sp/>locking.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Most<sp/>uses<sp/>should<sp/>use<sp/>the<sp/>lock-accessor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lock()<sp/>{<sp/>_mutex.lock();<sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unlock()<sp/>{<sp/>_mutex.unlock();<sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>try_lock()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_mutex.try_lock();<sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>MUTEX_TYPE<sp/><sp/>_mutex;</highlight></codeline>
<codeline lineno="447"><highlight class="normal">};</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MUTEX_TYPE&gt;</highlight></codeline>
<codeline lineno="451" refid="classihipStreamCriticalBase__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classihipStreamCriticalBase__t" kindref="compound">ihipStreamCriticalBase_t</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structLockedBase" kindref="compound">LockedBase</ref>&lt;MUTEX_TYPE&gt;</highlight></codeline>
<codeline lineno="452"><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classihipStreamCriticalBase__t" kindref="compound">ihipStreamCriticalBase_t</ref>(<ref refid="classihipStream__t" kindref="compound">ihipStream_t</ref><sp/>*parentStream,<sp/>hc::accelerator_view<sp/>av)<sp/>:</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_kernelCnt(0),</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_av(av),</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_parent(parentStream)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="classihipStreamCriticalBase__t" kindref="compound">ihipStreamCriticalBase_t</ref>()<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classihipStreamCriticalBase__t" kindref="compound">ihipStreamCriticalBase_t&lt;StreamMutex&gt;</ref><sp/><sp/>*<sp/>mlock()<sp/>{<sp/><ref refid="structLockedBase" kindref="compound">LockedBase&lt;MUTEX_TYPE&gt;::lock</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;};</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>munlock()<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tprintf(DB_SYNC,<sp/></highlight><highlight class="stringliteral">&quot;munlocking<sp/>criticalData=%p<sp/>for<sp/>%s...\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>ToString(this-&gt;_parent).c_str());</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structLockedBase" kindref="compound">LockedBase&lt;MUTEX_TYPE&gt;::unlock</ref>();</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classihipStreamCriticalBase__t" kindref="compound">ihipStreamCriticalBase_t&lt;StreamMutex&gt;</ref><sp/><sp/>*<sp/>mtry_lock()<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gotLock<sp/>=<sp/><ref refid="structLockedBase" kindref="compound">LockedBase&lt;MUTEX_TYPE&gt;::try_lock</ref>()<sp/>;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tprintf(DB_SYNC,<sp/></highlight><highlight class="stringliteral">&quot;mtry_locking=%d<sp/>criticalData=%p<sp/>for<sp/>%s...\n&quot;</highlight><highlight class="normal">,<sp/>gotLock,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>ToString(this-&gt;_parent).c_str());</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gotLock<sp/>?<sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classihipStream__t" kindref="compound">ihipStream_t</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_parent;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_kernelCnt;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>of<sp/>inflight<sp/>kernels<sp/>in<sp/>this<sp/>stream.<sp/><sp/>Reset<sp/>at<sp/>::wait().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>hc::accelerator_view<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_av;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="483"><highlight class="normal">};</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>HIP<sp/>code<sp/>needs<sp/>to<sp/>acquire<sp/>locks<sp/>for<sp/>both<sp/>ihipCtx_t<sp/>and<sp/>ihipStream_t,<sp/>it<sp/>should<sp/>first<sp/>acquire<sp/>the<sp/>lock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>the<sp/>ihipCtx_t<sp/>and<sp/>then<sp/>for<sp/>the<sp/>individual<sp/>streams.<sp/><sp/>The<sp/>locks<sp/>should<sp/>not<sp/>be<sp/>acquired<sp/>in<sp/>reverse<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>deadlock<sp/>may<sp/>occur.<sp/><sp/>In<sp/>some<sp/>cases,<sp/>it<sp/>may<sp/>be<sp/>possible<sp/>to<sp/>reduce<sp/>the<sp/>range<sp/>where<sp/>the<sp/>locks<sp/>must<sp/>be<sp/>held.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="comment">//<sp/>HIP<sp/>routines<sp/>should<sp/>avoid<sp/>acquiring<sp/>and<sp/>releasing<sp/>the<sp/>same<sp/>lock<sp/>during<sp/>the<sp/>execution<sp/>of<sp/>a<sp/>single<sp/>HIP<sp/>API.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Another<sp/>option<sp/>is<sp/>to<sp/>use<sp/>try_lock<sp/>in<sp/>the<sp/>innermost<sp/>lock<sp/>query.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classihipStreamCriticalBase__t" kindref="compound">ihipStreamCriticalBase_t&lt;StreamMutex&gt;</ref><sp/><ref refid="classihipStreamCriticalBase__t" kindref="compound">ihipStreamCritical_t</ref>;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classLockedAccessor" kindref="compound">LockedAccessor&lt;ihipStreamCritical_t&gt;</ref><sp/><ref refid="classLockedAccessor" kindref="compound">LockedAccessor_StreamCrit_t</ref>;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="comment">//---</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Internal<sp/>stream<sp/>structure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498" refid="classihipStream__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classihipStream__t" kindref="compound">ihipStream_t</ref><sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ScheduleMode<sp/>{Auto,<sp/>Spin,<sp/>Yield};</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint64_t<sp/>SeqNum_t<sp/>;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODOD<sp/>-make<sp/>av<sp/>a<sp/>reference<sp/>to<sp/>avoid<sp/>shared_ptr<sp/>overhead?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classihipStream__t" kindref="compound">ihipStream_t</ref>(<ref refid="classihipCtx__t" kindref="compound">ihipCtx_t</ref><sp/>*ctx,<sp/>hc::accelerator_view<sp/>av,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="classihipStream__t" kindref="compound">ihipStream_t</ref>();</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>kind<sp/>is<sp/>hipMemcpyKind</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>locked_copySync<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sizeBytes,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>kind,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>resolveOn<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>locked_copyAsync(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sizeBytes,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>kind);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lockedSymbolCopySync(hc::accelerator<sp/>&amp;acc,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dst,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sizeBytes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>kind);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lockedSymbolCopyAsync(hc::accelerator<sp/>&amp;acc,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dst,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sizeBytes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>kind);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//---</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Member<sp/>functions<sp/>that<sp/>begin<sp/>with<sp/>locked_<sp/>are<sp/>thread-safe<sp/>accessors<sp/>-<sp/>these<sp/>acquire<sp/>/<sp/>release<sp/>the<sp/>critical<sp/>mutex.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classLockedAccessor" kindref="compound">LockedAccessor_StreamCrit_t</ref><sp/><sp/>lockopen_preKernelCommand();</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lockclose_postKernelCommand(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*kernelName,<sp/>hc::accelerator_view<sp/>*av);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>locked_wait();</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>hc::accelerator_view*<sp/>locked_getAv()<sp/>{<sp/><ref refid="classLockedAccessor" kindref="compound">LockedAccessor_StreamCrit_t</ref><sp/>crit(_criticalData);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;(crit-&gt;_av);<sp/>};</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>locked_streamWaitEvent(<ref refid="classihipEvent__t" kindref="compound">hipEvent_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>locked_recordEvent(<ref refid="classihipEvent__t" kindref="compound">hipEvent_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>locked_eventIsReady(<ref refid="classihipEvent__t" kindref="compound">hipEvent_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>locked_eventWaitComplete(<ref refid="classihipEvent__t" kindref="compound">hipEvent_t</ref><sp/>event,<sp/>hc::hcWaitMode<sp/>waitMode);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classihipStreamCriticalBase__t" kindref="compound">ihipStreamCritical_t</ref><sp/><sp/>&amp;criticalData()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_criticalData;<sp/>};</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//---</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>hc::hcWaitMode<sp/>waitMode()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>this<sp/>if<sp/>we<sp/>already<sp/>have<sp/>the<sp/>stream<sp/>critical<sp/>data<sp/>mutex:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wait(<ref refid="classLockedAccessor" kindref="compound">LockedAccessor_StreamCrit_t</ref><sp/>&amp;crit);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>launchModuleKernel(hc::accelerator_view<sp/>av,<sp/>hsa_signal_t<sp/>signal,</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>blockDimX,<sp/>uint32_t<sp/>blockDimY,<sp/>uint32_t<sp/>blockDimZ,</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>gridDimX,<sp/>uint32_t<sp/>gridDimY,<sp/>uint32_t<sp/>gridDimZ,</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>groupSegmentSize,<sp/>uint32_t<sp/>sharedMemBytes,</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*kernarg,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>kernSize,<sp/>uint64_t<sp/>kernel);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//--<sp/>Non-racy<sp/>accessors:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>functions<sp/>access<sp/>fields<sp/>set<sp/>at<sp/>initialization<sp/>time<sp/>and<sp/>are<sp/>non-racy<sp/>(so<sp/>do<sp/>not<sp/>acquire<sp/>mutex)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classihipDevice__t" kindref="compound">ihipDevice_t</ref><sp/>*<sp/><sp/><sp/><sp/><sp/>getDevice()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classihipCtx__t" kindref="compound">ihipCtx_t</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getCtx()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Before<sp/>calling<sp/>this<sp/>function,<sp/>stream<sp/>must<sp/>be<sp/>resolved<sp/>from<sp/>&quot;0&quot;<sp/>to<sp/>the<sp/>actual<sp/>stream:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isDefaultStream()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id<sp/>==<sp/>0;<sp/>};</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//---</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Public<sp/>member<sp/>vars<sp/>-<sp/>these<sp/>are<sp/>set<sp/>at<sp/>initialization<sp/>and<sp/>never<sp/>change:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>SeqNum_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_id;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>monotonic<sp/>sequence<sp/>ID.<sp/><sp/>0<sp/>is<sp/>the<sp/>default<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_flags;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>unsigned<sp/>return<sp/>is<sp/>hipMemcpyKind</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>resolveMemcpyDirection(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>srcInDeviceMem,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dstInDeviceMem);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resolveHcMemcpyDirection(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>hipMemKind,</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hc::AmPointerInfo<sp/>*dstPtrInfo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hc::AmPointerInfo<sp/>*srcPtrInfo,</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hc::hcCommandKind<sp/>*hcCopyDir,</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classihipCtx__t" kindref="compound">ihipCtx_t</ref><sp/>**copyDevice,</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*forceUnpinnedCopy);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>canSeeMemory(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classihipCtx__t" kindref="compound">ihipCtx_t</ref><sp/>*thisCtx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hc::AmPointerInfo<sp/>*dstInfo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hc::AmPointerInfo<sp/>*srcInfo);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addSymbolPtrToTracker(hc::accelerator&amp;<sp/>acc,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sizeBytes);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>-<sp/>move<sp/>private</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Critical<sp/>Data<sp/>-<sp/>MUST<sp/>be<sp/>accessed<sp/>through<sp/>LockedAccessor_StreamCrit_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classihipStreamCriticalBase__t" kindref="compound">ihipStreamCritical_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_criticalData;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">//<sp/>Data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>std::mutex<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_hasQueueLock;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classihipCtx__t" kindref="compound">ihipCtx_t</ref><sp/><sp/>*_ctx;<sp/><sp/></highlight><highlight class="comment">//<sp/>parent<sp/>context<sp/>that<sp/>owns<sp/>this<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Friends:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/>operator&lt;&lt;(std::ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classihipStream__t" kindref="compound">ihipStream_t</ref>&amp;<sp/>s);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="group__GlobalDefs_1gadf5010f6e140a53ecbdf949e73e87594" kindref="member">hipError_t</ref><sp/><ref refid="classihipStream__t_1a46bba2e3bfbb0915a08fb608aed31858" kindref="member">hipStreamQuery</ref>(<ref refid="classihipStream__t" kindref="compound">hipStream_t</ref>);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>ScheduleMode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_scheduleMode;</highlight></codeline>
<codeline lineno="592"><highlight class="normal">};</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="comment">//----</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Internal<sp/>event<sp/>structure:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>hipEventStatus_t<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>hipEventStatusUnitialized<sp/>=<sp/>0,<sp/></highlight><highlight class="comment">//<sp/>event<sp/>is<sp/>uninitialized,<sp/>must<sp/>be<sp/>&quot;Created&quot;<sp/>before<sp/>use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>hipEventStatusCreated<sp/><sp/><sp/><sp/><sp/>=<sp/>1,<sp/></highlight><highlight class="comment">//<sp/>event<sp/>created,<sp/>but<sp/>not<sp/>yet<sp/>Recorded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>hipEventStatusRecording<sp/><sp/><sp/>=<sp/>2,<sp/></highlight><highlight class="comment">//<sp/>event<sp/>has<sp/>been<sp/>recorded<sp/>into<sp/>a<sp/>stream<sp/>but<sp/>not<sp/>completed<sp/>yet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>hipEventStatusComplete<sp/><sp/><sp/><sp/>=<sp/>3,<sp/></highlight><highlight class="comment">//<sp/>event<sp/>has<sp/>been<sp/>recorded<sp/>-<sp/>timestamps<sp/>are<sp/>valid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal">}<sp/>;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO<sp/>-<sp/>rename<sp/>to<sp/>ihip<sp/>type<sp/>of<sp/>some<sp/>kind</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ihipEventType_t<sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>hipEventTypeIndependent,</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>hipEventTypeStartCommand,</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>hipEventTypeStopCommand,</highlight></codeline>
<codeline lineno="610"><highlight class="normal">};</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="comment">//<sp/>internal<sp/>hip<sp/>event<sp/>structure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613" refid="classihipEvent__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classihipEvent__t" kindref="compound">ihipEvent_t</ref><sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classihipEvent__t" kindref="compound">ihipEvent_t</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>attachToCompletionFuture(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hc::completion_future<sp/>*cf,<sp/><ref refid="classihipStream__t" kindref="compound">hipStream_t</ref><sp/>stream,<sp/>ihipEventType_t<sp/>eventType);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>refereshEventStatus();</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>hc::completion_future<sp/>&amp;<sp/>marker()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_marker;<sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>marker(hc::completion_future<sp/>cf)<sp/>{<sp/>_marker<sp/>=<sp/>cf;<sp/>};</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>locked_isReady();</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>locked_waitComplete(hc::hcWaitMode<sp/>waitMode);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>timestamp()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_timestamp;<sp/>}<sp/>;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>ihipEventType_t<sp/>type()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_type;<sp/>};</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>hipEventStatus_t<sp/><sp/><sp/><sp/><sp/><sp/>_state;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classihipStream__t" kindref="compound">hipStream_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_stream;<sp/><sp/></highlight><highlight class="comment">//<sp/>Stream<sp/>where<sp/>the<sp/>event<sp/>is<sp/>recorded.<sp/><sp/>Null<sp/>stream<sp/>is<sp/>resolved<sp/>to<sp/>actual<sp/>stream<sp/>when<sp/>recorded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_flags;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>hc::completion_future<sp/>_marker;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>ihipEventType_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>_type;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_timestamp;<sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>timestamp,<sp/>may<sp/>be<sp/>set<sp/>on<sp/>host<sp/>or<sp/>by<sp/>marker.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="group__GlobalDefs_1gadf5010f6e140a53ecbdf949e73e87594" kindref="member">hipError_t</ref><sp/><ref refid="classihipEvent__t_1a553b6f7a8e7b7dd9536d8a64c24d7e29" kindref="member">hipEventRecord</ref>(<ref refid="classihipEvent__t" kindref="compound">hipEvent_t</ref><sp/>event,<sp/><ref refid="classihipStream__t" kindref="compound">hipStream_t</ref><sp/>stream);</highlight></codeline>
<codeline lineno="639"><highlight class="normal">}<sp/>;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="comment">//class<sp/>ihipDeviceCriticalBase_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MUTEX_TYPE&gt;</highlight></codeline>
<codeline lineno="646" refid="classihipDeviceCriticalBase__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classihipDeviceCriticalBase__t" kindref="compound">ihipDeviceCriticalBase_t</ref><sp/>:<sp/><ref refid="structLockedBase" kindref="compound">LockedBase</ref>&lt;MUTEX_TYPE&gt;</highlight></codeline>
<codeline lineno="647"><highlight class="normal">{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classihipDeviceCriticalBase__t" kindref="compound">ihipDeviceCriticalBase_t</ref>(<ref refid="classihipDevice__t" kindref="compound">ihipDevice_t</ref><sp/>*parentDevice)<sp/>:</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_parent(parentDevice)</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="classihipDeviceCriticalBase__t" kindref="compound">ihipDeviceCriticalBase_t</ref>()<sp/><sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Contexts:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addContext(<ref refid="classihipCtx__t" kindref="compound">ihipCtx_t</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>removeContext(<ref refid="classihipCtx__t" kindref="compound">ihipCtx_t</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>std::list&lt;ihipCtx_t*&gt;<sp/>&amp;ctxs()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_ctxs;<sp/>};</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::list&lt;ihipCtx_t*&gt;<sp/>&amp;const_ctxs()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_ctxs;<sp/>};</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getcount()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_ctxCount;};</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classLockedAccessor" kindref="compound">LockedAccessor</ref>&lt;ihipDeviceCriticalBase_t&gt;;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classihipDevice__t" kindref="compound">ihipDevice_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*_parent;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//---<sp/>Context<sp/>Tracker:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>std::list&lt;<sp/>ihipCtx_t*<sp/>&gt;<sp/>_ctxs;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>contexts<sp/>associated<sp/>with<sp/>this<sp/>device<sp/>across<sp/>all<sp/>threads.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_ctxCount;</highlight></codeline>
<codeline lineno="672"><highlight class="normal">};</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classihipDeviceCriticalBase__t" kindref="compound">ihipDeviceCriticalBase_t&lt;DeviceMutex&gt;</ref><sp/><ref refid="classihipDeviceCriticalBase__t" kindref="compound">ihipDeviceCritical_t</ref>;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classLockedAccessor" kindref="compound">LockedAccessor&lt;ihipDeviceCritical_t&gt;</ref><sp/><ref refid="classLockedAccessor" kindref="compound">LockedAccessor_DeviceCrit_t</ref>;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="comment">//----</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Properties<sp/>of<sp/>the<sp/>HIP<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Multiple<sp/>contexts<sp/>can<sp/>point<sp/>to<sp/>same<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681" refid="classihipDevice__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classihipDevice__t" kindref="compound">ihipDevice_t</ref></highlight></codeline>
<codeline lineno="682"><highlight class="normal">{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classihipDevice__t" kindref="compound">ihipDevice_t</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>deviceId,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>deviceCnt,<sp/>hc::accelerator<sp/>&amp;acc);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="classihipDevice__t" kindref="compound">ihipDevice_t</ref>();</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Accessors:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classihipCtx__t" kindref="compound">ihipCtx_t</ref><sp/>*getPrimaryCtx()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_primaryCtx;<sp/>};</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>locked_removeContext(<ref refid="classihipCtx__t" kindref="compound">ihipCtx_t</ref><sp/>*c);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>locked_reset();</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classihipDeviceCriticalBase__t" kindref="compound">ihipDeviceCritical_t</ref><sp/><sp/>&amp;criticalData()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_criticalData;<sp/>};</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_deviceId;<sp/></highlight><highlight class="comment">//<sp/>device<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>hc::accelerator<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_acc;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>hsa_agent_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_hsaAgent;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hsa<sp/>agent<sp/>handle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="699" refid="classihipDevice__t_1a655e03136394df32571a52707aa371c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classihipDevice__t_1a655e03136394df32571a52707aa371c5" kindref="member">_computeUnits</ref>;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhipDeviceProp__t" kindref="compound">hipDeviceProp_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_props;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>saved<sp/>device<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>-<sp/>report<sp/>this<sp/>through<sp/>device<sp/>properties,<sp/>base<sp/>on<sp/>HCC<sp/>API<sp/>call.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_isLargeBar;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classihipCtx__t" kindref="compound">ihipCtx_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*_primaryCtx;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_state;<sp/></highlight><highlight class="comment">//1<sp/>if<sp/>device<sp/>is<sp/>set<sp/>otherwise<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__GlobalDefs_1gadf5010f6e140a53ecbdf949e73e87594" kindref="member">hipError_t</ref><sp/>initProperties(<ref refid="structhipDeviceProp__t" kindref="compound">hipDeviceProp_t</ref>*<sp/>prop);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classihipDeviceCriticalBase__t" kindref="compound">ihipDeviceCritical_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_criticalData;</highlight></codeline>
<codeline lineno="713"><highlight class="normal">};</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="comment">//class<sp/>ihipCtxCriticalBase_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MUTEX_TYPE&gt;</highlight></codeline>
<codeline lineno="721" refid="classihipCtxCriticalBase__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classihipCtxCriticalBase__t" kindref="compound">ihipCtxCriticalBase_t</ref><sp/>:<sp/><ref refid="structLockedBase" kindref="compound">LockedBase</ref>&lt;MUTEX_TYPE&gt;</highlight></codeline>
<codeline lineno="722"><highlight class="normal">{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classihipCtxCriticalBase__t" kindref="compound">ihipCtxCriticalBase_t</ref>(<ref refid="classihipCtx__t" kindref="compound">ihipCtx_t</ref><sp/>*parentCtx,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>deviceCnt)<sp/>:</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_parent(parentCtx),</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_peerCnt(0)</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_peerAgents<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>hsa_agent_t[deviceCnt];</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="classihipCtxCriticalBase__t" kindref="compound">ihipCtxCriticalBase_t</ref>()<sp/><sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_peerAgents<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>_peerAgents;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_peerAgents<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_peerCnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Streams:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addStream(<ref refid="classihipStream__t" kindref="compound">ihipStream_t</ref><sp/>*stream);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>std::list&lt;ihipStream_t*&gt;<sp/>&amp;streams()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_streams;<sp/>};</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::list&lt;ihipStream_t*&gt;<sp/>&amp;const_streams()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_streams;<sp/>};</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Peer<sp/>Accessor<sp/>classes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isPeerWatcher(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classihipCtx__t" kindref="compound">ihipCtx_t</ref><sp/>*peer);<sp/></highlight><highlight class="comment">//<sp/>returns<sp/>True<sp/>if<sp/>peer<sp/>has<sp/>access<sp/>to<sp/>memory<sp/>physically<sp/>located<sp/>on<sp/>this<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>addPeerWatcher(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classihipCtx__t" kindref="compound">ihipCtx_t</ref><sp/>*thisCtx,<sp/><ref refid="classihipCtx__t" kindref="compound">ihipCtx_t</ref><sp/>*peer);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>removePeerWatcher(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classihipCtx__t" kindref="compound">ihipCtx_t</ref><sp/>*thisCtx,<sp/><ref refid="classihipCtx__t" kindref="compound">ihipCtx_t</ref><sp/>*peer);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resetPeerWatchers(<ref refid="classihipCtx__t" kindref="compound">ihipCtx_t</ref><sp/>*thisDevice);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printPeerWatchers(FILE<sp/>*f)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>peerCnt()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_peerCnt;<sp/>};</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>hsa_agent_t<sp/>*peerAgents()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_peerAgents;<sp/>};</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>-<sp/>move<sp/>private</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>std::list&lt;ihipCtx_t*&gt;<sp/><sp/><sp/><sp/><sp/>_peers;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>list<sp/>of<sp/>enabled<sp/>peer<sp/>devices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classLockedAccessor" kindref="compound">LockedAccessor</ref>&lt;ihipCtxCriticalBase_t&gt;;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classihipCtx__t" kindref="compound">ihipCtx_t</ref><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_parent;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//---<sp/>Stream<sp/>Tracker:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>std::list&lt;<sp/>ihipStream_t*<sp/>&gt;<sp/>_streams;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>streams<sp/>associated<sp/>with<sp/>this<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//---<sp/>Peer<sp/>Tracker:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>reflect<sp/>the<sp/>currently<sp/>Enabled<sp/>set<sp/>of<sp/>peers<sp/>for<sp/>this<sp/>GPU:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enabled<sp/>peers<sp/>have<sp/>permissions<sp/>to<sp/>access<sp/>the<sp/>memory<sp/>physically<sp/>allocated<sp/>on<sp/>this<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>the<sp/>peers<sp/>always<sp/>contain<sp/>the<sp/>self<sp/>agent<sp/>for<sp/>easy<sp/>interfacing<sp/>with<sp/>HSA<sp/>APIs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_peerCnt;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>enabled<sp/>peers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>hsa_agent_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*_peerAgents;<sp/><sp/></highlight><highlight class="comment">//<sp/>efficient<sp/>packed<sp/>array<sp/>of<sp/>enabled<sp/>agents<sp/>(to<sp/>use<sp/>for<sp/>allocations.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>recomputePeerAgents();</highlight></codeline>
<codeline lineno="776"><highlight class="normal">};</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>Mutex<sp/>type<sp/>Real/Fake<sp/>selected<sp/>based<sp/>on<sp/>CtxMutex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classihipCtxCriticalBase__t" kindref="compound">ihipCtxCriticalBase_t&lt;CtxMutex&gt;</ref><sp/><ref refid="classihipCtxCriticalBase__t" kindref="compound">ihipCtxCritical_t</ref>;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>type<sp/>is<sp/>used<sp/>by<sp/>functions<sp/>that<sp/>need<sp/>access<sp/>to<sp/>the<sp/>critical<sp/>device<sp/>structures.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classLockedAccessor" kindref="compound">LockedAccessor&lt;ihipCtxCritical_t&gt;</ref><sp/><ref refid="classLockedAccessor" kindref="compound">LockedAccessor_CtxCrit_t</ref>;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="comment">//class<sp/>ihipCtx_t:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>HIP<sp/>CTX<sp/>(context)<sp/>points<sp/>at<sp/>one<sp/>of<sp/>the<sp/>existing<sp/>devices<sp/>and<sp/>contains<sp/>the<sp/>streams,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight><highlight class="comment">//<sp/>peer-to-peer<sp/>mappings,<sp/>creation<sp/>flags.<sp/><sp/>Multiple<sp/>contexts<sp/>can<sp/>point<sp/>to<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight><highlight class="comment">//<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791" refid="classihipCtx__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classihipCtx__t" kindref="compound">ihipCtx_t</ref></highlight></codeline>
<codeline lineno="792"><highlight class="normal">{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">//<sp/>Functions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classihipCtx__t" kindref="compound">ihipCtx_t</ref>(<ref refid="classihipDevice__t" kindref="compound">ihipDevice_t</ref><sp/>*device,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>deviceCnt,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>flags);<sp/></highlight><highlight class="comment">//<sp/>note:<sp/>calls<sp/>constructor<sp/>for<sp/>_criticalData</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="classihipCtx__t" kindref="compound">ihipCtx_t</ref>();</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Functions<sp/>which<sp/>read<sp/>or<sp/>write<sp/>the<sp/>critical<sp/>data<sp/>are<sp/>named<sp/>locked_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(might<sp/>be<sp/>better<sp/>called<sp/>&quot;locking_&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ihipCtx_t<sp/>does<sp/>not<sp/>use<sp/>recursive<sp/>locks<sp/>so<sp/>the<sp/>ihip<sp/>implementation<sp/>must<sp/>avoid<sp/>calling<sp/>a<sp/>locked_<sp/>function<sp/>from<sp/>within<sp/>a<sp/>locked_<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>External<sp/>functions<sp/>which<sp/>call<sp/>several<sp/>locked_<sp/>functions<sp/>will<sp/>acquire<sp/>and<sp/>release<sp/>the<sp/>lock<sp/>for<sp/>each<sp/>function.<sp/><sp/>if<sp/>this<sp/>occurs<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>performance-sensitive<sp/>code<sp/>we<sp/>may<sp/>want<sp/>to<sp/>refactor<sp/>by<sp/>adding<sp/>non-locked<sp/>functions<sp/>and<sp/>creating<sp/>a<sp/>new<sp/>locked_<sp/>member<sp/>function<sp/>to<sp/>call<sp/>them<sp/>all.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>locked_removeStream(<ref refid="classihipStream__t" kindref="compound">ihipStream_t</ref><sp/>*s);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>locked_reset();</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>locked_waitAllStreams();</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>locked_syncDefaultStream(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>waitOnSelf,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>syncHost);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classihipCtxCriticalBase__t" kindref="compound">ihipCtxCritical_t</ref><sp/><sp/>&amp;criticalData()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_criticalData;<sp/>};</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classihipDevice__t" kindref="compound">ihipDevice_t</ref><sp/>*getDevice()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_device;<sp/>};</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getDeviceNum()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_device-&gt;_deviceId;<sp/>};</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>-<sp/>review<sp/>uses<sp/>of<sp/>getWriteableDevice(),<sp/>can<sp/>these<sp/>be<sp/>converted<sp/>to<sp/>getDevice()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classihipDevice__t" kindref="compound">ihipDevice_t</ref><sp/>*getWriteableDevice()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_device;<sp/>};</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>toString()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/><sp/></highlight><highlight class="comment">//<sp/>Data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>NULL<sp/>stream<sp/>is<sp/>used<sp/>if<sp/>no<sp/>other<sp/>stream<sp/>is<sp/>specified.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>stream<sp/>has<sp/>special<sp/>synchronization<sp/>properties<sp/>with<sp/>other<sp/>streams.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classihipStream__t" kindref="compound">ihipStream_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*_defaultStream;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Flags<sp/>specified<sp/>when<sp/>the<sp/>context<sp/>is<sp/>created:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ctxFlags;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classihipDevice__t" kindref="compound">ihipDevice_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*_device;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:<sp/><sp/></highlight><highlight class="comment">//<sp/>Critical<sp/>data,<sp/>protected<sp/>with<sp/>locked<sp/>access:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Members<sp/>of<sp/>_protected<sp/>data<sp/>MUST<sp/>be<sp/>accessed<sp/>through<sp/>the<sp/>LockedAccessor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>for<sp/>LockedAccessor&lt;ihipCtxCritical_t&gt;<sp/>for<sp/>examples;<sp/>do<sp/>not<sp/>access<sp/>_criticalData<sp/>directly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classihipCtxCriticalBase__t" kindref="compound">ihipCtxCritical_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_criticalData;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal">};</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight><highlight class="comment">//=================================================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Global<sp/>variable<sp/>definition:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>std::once_flag<sp/>hip_initialized;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>g_deviceCnt;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>hsa_agent_t<sp/>g_cpu_agent<sp/>;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>CPU<sp/>agent.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>hsa_agent_t<sp/>*g_allAgents;<sp/></highlight><highlight class="comment">//<sp/>CPU<sp/>agents<sp/>+<sp/>all<sp/>the<sp/>visible<sp/>GPU<sp/>agents.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight><highlight class="comment">//=================================================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Extern<sp/>functions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ihipInit();</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ihipErrorString(<ref refid="group__GlobalDefs_1gadf5010f6e140a53ecbdf949e73e87594" kindref="member">hipError_t</ref>);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classihipCtx__t" kindref="compound">ihipCtx_t</ref><sp/><sp/><sp/><sp/>*ihipGetTlsDefaultCtx();</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ihipSetTlsDefaultCtx(<ref refid="classihipCtx__t" kindref="compound">ihipCtx_t</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="group__GlobalDefs_1gadf5010f6e140a53ecbdf949e73e87594" kindref="member">hipError_t</ref><sp/><sp/><sp/><sp/>ihipSynchronize(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ihipCtxStackUpdate();</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="group__GlobalDefs_1gadf5010f6e140a53ecbdf949e73e87594" kindref="member">hipError_t</ref><sp/><sp/><sp/><sp/>ihipDeviceSetState();</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classihipDevice__t" kindref="compound">ihipDevice_t</ref><sp/>*ihipGetDevice(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><ref refid="classihipCtx__t" kindref="compound">ihipCtx_t</ref><sp/>*<sp/>ihipGetPrimaryCtx(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>deviceIndex);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><ref refid="classihipStream__t" kindref="compound">hipStream_t</ref><sp/>ihipSyncAndResolveStream(<ref refid="classihipStream__t" kindref="compound">hipStream_t</ref>);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Stream<sp/>printf<sp/>functions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/>operator&lt;&lt;(std::ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classihipStream__t" kindref="compound">ihipStream_t</ref>&amp;<sp/>s)</highlight></codeline>
<codeline lineno="863"><highlight class="normal">{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;stream:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>s.getDevice()-&gt;_deviceId;;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>s._id;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="869"><highlight class="normal">}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream<sp/>&amp;<sp/>operator&lt;&lt;(std::ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdim3" kindref="compound">dim3</ref>&amp;<sp/>s)</highlight></codeline>
<codeline lineno="872"><highlight class="normal">{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;{&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>s.<ref refid="structdim3_1ac866c05f83a28dac20a153fc65b3b16c" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>s.<ref refid="structdim3_1a83e60e072f7e8bdfde6ac05053cbb370" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>s.<ref refid="structdim3_1a866e38993ecc4e76fd47311236c16b04" kindref="member">z</ref>;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="881"><highlight class="normal">}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream<sp/>&amp;<sp/>operator&lt;&lt;(std::ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gl_dim3&amp;<sp/>s)</highlight></codeline>
<codeline lineno="884"><highlight class="normal">{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;{&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>s.x;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>s.y;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>s.z;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="893"><highlight class="normal">}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Stream<sp/>printf<sp/>functions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/>operator&lt;&lt;(std::ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classihipEvent__t" kindref="compound">hipEvent_t</ref>&amp;<sp/>e)</highlight></codeline>
<codeline lineno="897"><highlight class="normal">{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;event:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>static_cast&lt;void*&gt;<sp/>(e);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="900"><highlight class="normal">}</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/>operator&lt;&lt;(std::ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classihipCtx__t" kindref="compound">ihipCtx_t</ref>*<sp/>c)</highlight></codeline>
<codeline lineno="903"><highlight class="normal">{</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ctx:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(c)</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.dev:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>c-&gt;getDevice()-&gt;_deviceId;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="907"><highlight class="normal">}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>functions<sp/>that<sp/>are<sp/>used<sp/>across<sp/>src<sp/>files:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacehip__internal" kindref="compound">hip_internal</ref><sp/>{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__GlobalDefs_1gadf5010f6e140a53ecbdf949e73e87594" kindref="member">hipError_t</ref><sp/>memcpyAsync<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sizeBytes,<sp/>hipMemcpyKind<sp/>kind,<sp/><ref refid="classihipStream__t" kindref="compound">hipStream_t</ref><sp/>stream);</highlight></codeline>
<codeline lineno="913"><highlight class="normal">};</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc_internal.h"/>
  </compounddef>
</doxygen>
