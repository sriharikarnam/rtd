<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="env_8h" kind="file" language="C++">
    <compoundname>env.h</compoundname>
    <includedby refid="hip__hcc__internal_8h" local="yes">HIP/src/hip_hcc_internal.h</includedby>
    <includedby refid="env_8cpp" local="yes">HIP/src/env.cpp</includedby>
    <includedby refid="hip__hcc_8cpp" local="yes">HIP/src/hip_hcc.cpp</includedby>
    <invincdepgraph>
      <node id="671">
        <label>HIP/src/hip_hcc.cpp</label>
        <link refid="hip__hcc_8cpp"/>
      </node>
      <node id="669">
        <label>HIP/src/env.h</label>
        <link refid="env.h"/>
        <childnode refid="670" relation="include">
        </childnode>
        <childnode refid="671" relation="include">
        </childnode>
      </node>
      <node id="670">
        <label>HIP/src/hip_hcc_internal.h</label>
        <link refid="hip__hcc__internal_8h_source"/>
        <childnode refid="671" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="env_8h_1a2b90029add81faa0bf675869ffc31354" prot="public" static="no">
        <name>READ_ENV_I</name>
        <param><defname>_build</defname></param>
        <param><defname>_ENV_VAR</defname></param>
        <param><defname>_ENV_VAR2</defname></param>
        <param><defname>_description</defname></param>
        <initializer>ihipReadEnv_I(&amp;_ENV_VAR, #_ENV_VAR, #_ENV_VAR2, _description);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/env.h" line="7" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/env.h" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="env_8h_1aeb94daa38d639c3338d5b7e6b191320c" prot="public" static="no">
        <name>READ_ENV_S</name>
        <param><defname>_build</defname></param>
        <param><defname>_ENV_VAR</defname></param>
        <param><defname>_ENV_VAR2</defname></param>
        <param><defname>_description</defname></param>
        <initializer>ihipReadEnv_S(&amp;_ENV_VAR, #_ENV_VAR, #_ENV_VAR2, _description);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/env.h" line="10" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/env.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="env_8h_1ae1e5b1a1eab6a127e7dd5190f848929b" prot="public" static="no">
        <name>READ_ENV_C</name>
        <param><defname>_build</defname></param>
        <param><defname>_ENV_VAR</defname></param>
        <param><defname>_ENV_VAR2</defname></param>
        <param><defname>_description</defname></param>
        <param><defname>_callback</defname></param>
        <initializer>ihipReadEnv_Callback(&amp;_ENV_VAR, #_ENV_VAR, #_ENV_VAR2, _description, _callback);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/env.h" line="13" column="9" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/env.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="env_8h_1a6f61c90d09279d46c6a66bf9e3076745" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HipReadEnv</definition>
        <argsstring>()</argsstring>
        <name>HipReadEnv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/env.h" line="3" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/hip_hcc.cpp" bodystart="1211" bodyend="1314"/>
      </memberdef>
      <memberdef kind="function" id="env_8h_1a909b9051d30b31e4c93e81aa697cc95f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ihipReadEnv_I</definition>
        <argsstring>(int *var_ptr, const char *var_name1, const char *var_name2, const char *description)</argsstring>
        <name>ihipReadEnv_I</name>
        <param>
          <type>int *</type>
          <declname>var_ptr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>var_name1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>var_name2</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/env.h" line="17" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/env.cpp" bodystart="29" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="env_8h_1a0cd50beb9dacd5b9d06228a38b7de6de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ihipReadEnv_S</definition>
        <argsstring>(std::string *var_ptr, const char *var_name1, const char *var_name2, const char *description)</argsstring>
        <name>ihipReadEnv_S</name>
        <param>
          <type>std::string *</type>
          <declname>var_ptr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>var_name1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>var_name2</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/env.h" line="18" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/env.cpp" bodystart="50" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="env_8h_1abf30ada63bb2b7116915d3d69a4ed09a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ihipReadEnv_Callback</definition>
        <argsstring>(void *var_ptr, const char *var_name1, const char *var_name2, const char *description, std::string(*setterCallback)(void *var_ptr, const char *env))</argsstring>
        <name>ihipReadEnv_Callback</name>
        <param>
          <type>void *</type>
          <declname>var_ptr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>var_name1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>var_name2</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>description</declname>
        </param>
        <param>
          <type>std::string(*)(void *var_ptr, const char *env)</type>
          <declname>setterCallback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/env.h" line="19" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/env.cpp" bodystart="68" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="env_8h_1ab7082a3a9c1a90ecafa279ed1b094dd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void trim</definition>
        <argsstring>(std::string *s)</argsstring>
        <name>trim</name>
        <param>
          <type>std::string *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/env.h" line="23" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/env.cpp" bodystart="100" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="env_8h_1ac9cbf6f3f3d16909bc382a2f2d743195" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tokenize</definition>
        <argsstring>(const std::string &amp;s, char delim, std::vector&lt; std::string &gt; *tokens)</argsstring>
        <name>tokenize</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>char</type>
          <declname>delim</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt; *</type>
          <declname>tokens</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/env.h" line="24" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/env.cpp" bodystart="89" bodyend="98"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HipReadEnv();</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>READ_ENV_I(_build,<sp/>_ENV_VAR,<sp/>_ENV_VAR2,<sp/>_description)<sp/>\</highlight></codeline>
<codeline lineno="8"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ihipReadEnv_I(&amp;_ENV_VAR,<sp/>#_ENV_VAR,<sp/>#_ENV_VAR2,<sp/>_description);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>READ_ENV_S(_build,<sp/>_ENV_VAR,<sp/>_ENV_VAR2,<sp/>_description)<sp/>\</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ihipReadEnv_S(&amp;_ENV_VAR,<sp/>#_ENV_VAR,<sp/>#_ENV_VAR2,<sp/>_description);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>READ_ENV_C(_build,<sp/>_ENV_VAR,<sp/>_ENV_VAR2,<sp/>_description,<sp/>_callback)<sp/>\</highlight></codeline>
<codeline lineno="14"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ihipReadEnv_Callback(&amp;_ENV_VAR,<sp/>#_ENV_VAR,<sp/>#_ENV_VAR2,<sp/>_description,<sp/>_callback);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ihipReadEnv_I(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*var_ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*var_name1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*var_name2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*description);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ihipReadEnv_S(std::string<sp/>*var_ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*var_name1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*var_name2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*description);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ihipReadEnv_Callback(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*var_ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*var_name1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*var_name2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*description,<sp/>std::string<sp/>(*setterCallback)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>var_ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>env));</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>String<sp/>functions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>trim(std::string<sp/>*s);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tokenize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;s,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>delim,<sp/>std::vector&lt;std::string&gt;<sp/>*tokens);</highlight></codeline>
    </programlisting>
    <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/env.h"/>
  </compounddef>
</doxygen>
