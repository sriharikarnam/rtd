<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="math__functions_8cpp" kind="file" language="C++">
    <compoundname>math_functions.cpp</compoundname>
    <includes local="no">hc.hpp</includes>
    <includes local="no">grid_launch.h</includes>
    <includes local="no">hc_math.hpp</includes>
    <includes refid="device__util_8h" local="yes">device_util.h</includes>
    <includes refid="hcc__detail_2device__functions_8h" local="yes">hip/hcc_detail/device_functions.h</includes>
    <includes refid="hip__runtime_8h" local="yes">hip/hip_runtime.h</includes>
    <incdepgraph>
      <node id="1267">
        <label>hip/hcc_detail/hip_runtime_api.h</label>
        <link refid="hcc__detail_2hip__runtime__api_8h"/>
        <childnode refid="1268" relation="include">
        </childnode>
        <childnode refid="1264" relation="include">
        </childnode>
        <childnode refid="1269" relation="include">
        </childnode>
        <childnode refid="1270" relation="include">
        </childnode>
        <childnode refid="1265" relation="include">
        </childnode>
        <childnode refid="1271" relation="include">
        </childnode>
        <childnode refid="1272" relation="include">
        </childnode>
      </node>
      <node id="1276">
        <label>hip/hcc_detail/texture_types.h</label>
        <link refid="hcc__detail_2texture__types_8h_source"/>
        <childnode refid="1271" relation="include">
        </childnode>
      </node>
      <node id="1256">
        <label>HIP/src/math_functions.cpp</label>
        <link refid="math_functions.cpp"/>
        <childnode refid="1257" relation="include">
        </childnode>
        <childnode refid="1258" relation="include">
        </childnode>
        <childnode refid="1259" relation="include">
        </childnode>
        <childnode refid="1260" relation="include">
        </childnode>
        <childnode refid="1284" relation="include">
        </childnode>
        <childnode refid="1279" relation="include">
        </childnode>
      </node>
      <node id="1284">
        <label>hip/hcc_detail/device_functions.h</label>
        <link refid="hcc__detail_2device__functions_8h_source"/>
        <childnode refid="1279" relation="include">
        </childnode>
        <childnode refid="1283" relation="include">
        </childnode>
      </node>
      <node id="1282">
        <label>assert.h</label>
      </node>
      <node id="1259">
        <label>hc_math.hpp</label>
      </node>
      <node id="1277">
        <label>hip/hcc_detail/math_functions.h</label>
        <link refid="hcc__detail_2math__functions_8h_source"/>
        <childnode refid="1278" relation="include">
        </childnode>
        <childnode refid="1279" relation="include">
        </childnode>
        <childnode refid="1283" relation="include">
        </childnode>
        <childnode refid="1284" relation="include">
        </childnode>
      </node>
      <node id="1278">
        <label>kalmar_math.h</label>
      </node>
      <node id="1274">
        <label>hip/hcc_detail/channel_descriptor.h</label>
        <link refid="hcc__detail_2channel__descriptor_8h_source"/>
        <childnode refid="1271" relation="include">
        </childnode>
        <childnode refid="1275" relation="include">
        </childnode>
      </node>
      <node id="1268">
        <label>stdint.h</label>
      </node>
      <node id="1281">
        <label>stdlib.h</label>
      </node>
      <node id="1258">
        <label>grid_launch.h</label>
      </node>
      <node id="1286">
        <label>hc_short_vector.hpp</label>
      </node>
      <node id="1271">
        <label>hip/hcc_detail/driver_types.h</label>
        <link refid="hcc__detail_2driver__types_8h_source"/>
      </node>
      <node id="1264">
        <label>stddef.h</label>
      </node>
      <node id="1257">
        <label>hc.hpp</label>
      </node>
      <node id="1273">
        <label>limits.h</label>
      </node>
      <node id="1261">
        <label>hip/hcc_detail/hip_runtime.h</label>
        <link refid="hcc__detail_2hip__runtime_8h"/>
        <childnode refid="1262" relation="include">
        </childnode>
        <childnode refid="1263" relation="include">
        </childnode>
        <childnode refid="1264" relation="include">
        </childnode>
        <childnode refid="1265" relation="include">
        </childnode>
        <childnode refid="1258" relation="include">
        </childnode>
        <childnode refid="1270" relation="include">
        </childnode>
        <childnode refid="1277" relation="include">
        </childnode>
        <childnode refid="1284" relation="include">
        </childnode>
        <childnode refid="1285" relation="include">
        </childnode>
      </node>
      <node id="1263">
        <label>string.h</label>
      </node>
      <node id="1279">
        <label>hip/hip_runtime.h</label>
        <link refid="hip__runtime_8h_source"/>
        <childnode refid="1268" relation="include">
        </childnode>
        <childnode refid="1280" relation="include">
        </childnode>
        <childnode refid="1281" relation="include">
        </childnode>
        <childnode refid="1282" relation="include">
        </childnode>
        <childnode refid="1266" relation="include">
        </childnode>
        <childnode refid="1261" relation="include">
        </childnode>
        <childnode refid="1265" relation="include">
        </childnode>
        <childnode refid="1283" relation="include">
        </childnode>
      </node>
      <node id="1275">
        <label>hip/hcc_detail/hip_vector_types.h</label>
        <link refid="hcc__detail_2hip__vector__types_8h"/>
        <childnode refid="1270" relation="include">
        </childnode>
      </node>
      <node id="1266">
        <label>hip/hip_common.h</label>
        <link refid="hip__common_8h_source"/>
      </node>
      <node id="1262">
        <label>math.h</label>
      </node>
      <node id="1265">
        <label>hip/hip_runtime_api.h</label>
        <link refid="hip__runtime__api_8h_source"/>
        <childnode refid="1263" relation="include">
        </childnode>
        <childnode refid="1266" relation="include">
        </childnode>
        <childnode refid="1267" relation="include">
        </childnode>
      </node>
      <node id="1260">
        <label>device_util.h</label>
        <link refid="device__util_8h_source"/>
        <childnode refid="1261" relation="include">
        </childnode>
      </node>
      <node id="1269">
        <label>iostream</label>
      </node>
      <node id="1285">
        <label>hip/hcc_detail/texture_functions.h</label>
        <link refid="texture__functions_8h_source"/>
        <childnode refid="1257" relation="include">
        </childnode>
        <childnode refid="1286" relation="include">
        </childnode>
        <childnode refid="1272" relation="include">
        </childnode>
      </node>
      <node id="1283">
        <label>hip/hip_vector_types.h</label>
        <link refid="hip__vector__types_8h_source"/>
        <childnode refid="1266" relation="include">
        </childnode>
      </node>
      <node id="1272">
        <label>hip/hcc_detail/hip_texture_types.h</label>
        <link refid="hcc__detail_2hip__texture__types_8h"/>
        <childnode refid="1273" relation="include">
        </childnode>
        <childnode refid="1274" relation="include">
        </childnode>
        <childnode refid="1276" relation="include">
        </childnode>
      </node>
      <node id="1280">
        <label>stdio.h</label>
      </node>
      <node id="1270">
        <label>hip/hcc_detail/host_defines.h</label>
        <link refid="host__defines_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="math__functions_8cpp_1a63d1c22538561dc228fc230d10d85dca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float acosf</definition>
        <argsstring>(float x)</argsstring>
        <name>acosf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="31" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1ab0f45cada398311319b50a00ff7e826e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float acoshf</definition>
        <argsstring>(float x)</argsstring>
        <name>acoshf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="35" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a82b2bb388724796ae8a30069abb3b386" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float asinf</definition>
        <argsstring>(float x)</argsstring>
        <name>asinf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="39" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a74d4dabb94aa5c77ce31fd0ea987c083" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float asinhf</definition>
        <argsstring>(float x)</argsstring>
        <name>asinhf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="43" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a3f0bdfc73288f9dda45e5c9be7811c9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float atan2f</definition>
        <argsstring>(float y, float x)</argsstring>
        <name>atan2f</name>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="47" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a82629bb4eec2d8c9c95b9c69188beff9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float atanf</definition>
        <argsstring>(float x)</argsstring>
        <name>atanf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="51" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a1b176d9d72adbf998b1960f830ad9dcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float atanhf</definition>
        <argsstring>(float x)</argsstring>
        <name>atanhf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="55" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a96d2384128af36ea9cb9b20d366900c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float cbrtf</definition>
        <argsstring>(float x)</argsstring>
        <name>cbrtf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="59" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a43a6f3aa4ccdb026b038a3fe9a80f65d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float ceilf</definition>
        <argsstring>(float x)</argsstring>
        <name>ceilf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="63" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1af624240731f96c35e2bbf9aaa9217ad6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float copysignf</definition>
        <argsstring>(float x, float y)</argsstring>
        <name>copysignf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="67" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a20858ddd8f75a2c8332bdecd536057bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float cosf</definition>
        <argsstring>(float x)</argsstring>
        <name>cosf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="71" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a34a53cc088d117bc7045caa111279799" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float coshf</definition>
        <argsstring>(float x)</argsstring>
        <name>coshf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="75" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1aee787afb8a173c23b99d89239e245c59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float cyl_bessel_i0f</definition>
        <argsstring>(float x)</argsstring>
        <name>cyl_bessel_i0f</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a2505fc93886666a3ceec465ac5bfda1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float cyl_bessel_i1f</definition>
        <argsstring>(float x)</argsstring>
        <name>cyl_bessel_i1f</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a31faaaeab2a785191c3e0e66e030ceca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float erfcf</definition>
        <argsstring>(float x)</argsstring>
        <name>erfcf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="81" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a2bae6c7d986e0ab7e5cf685ac8b7236c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float erfcinvf</definition>
        <argsstring>(float y)</argsstring>
        <name>erfcinvf</name>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="85" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1aec797649c94f21aecb8dc033a7b97353" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float erfcxf</definition>
        <argsstring>(float x)</argsstring>
        <name>erfcxf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="89" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a3b8115ff34a107f4608152fd943dbf81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float erff</definition>
        <argsstring>(float x)</argsstring>
        <name>erff</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="93" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a0f3b173d8ba48cd495cc9c37e1f5ed4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float erfinvf</definition>
        <argsstring>(float y)</argsstring>
        <name>erfinvf</name>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="97" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="97" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a60f1de4fe78a907d915a52be29a799e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float exp10f</definition>
        <argsstring>(float x)</argsstring>
        <name>exp10f</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="101" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a3e2984de99de67ca680c9bb4f4427f81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float exp2f</definition>
        <argsstring>(float x)</argsstring>
        <name>exp2f</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="105" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1ae2d7656fe00f9e750c6f3bde8cc0dca6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float expf</definition>
        <argsstring>(float x)</argsstring>
        <name>expf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="109" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a832817212e7b0debe05d23ea37bdd748" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float expm1f</definition>
        <argsstring>(float x)</argsstring>
        <name>expm1f</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="113" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="113" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a0e776da4daca50684a850e49dd0e1604" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ int</type>
        <definition>__device__ int abs</definition>
        <argsstring>(int x)</argsstring>
        <name>abs</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="117" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="117" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1ab00f8593e1bfb1985526020fbec4e0fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float fabsf</definition>
        <argsstring>(float x)</argsstring>
        <name>fabsf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="121" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a13959e5ca19c910e0d6f8e6ca5492149" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float fdimf</definition>
        <argsstring>(float x, float y)</argsstring>
        <name>fdimf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="125" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a26852224a1347ee9b5edee12c869d206" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float fdividef</definition>
        <argsstring>(float x, float y)</argsstring>
        <name>fdividef</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="129" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="129" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1adbff62f4c1647b9694f35d053eff5288" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float floorf</definition>
        <argsstring>(float x)</argsstring>
        <name>floorf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="133" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="133" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a5910ee832dab4f5d37118e0a6811c195" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float fmaf</definition>
        <argsstring>(float x, float y, float z)</argsstring>
        <name>fmaf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="137" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="137" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a6e7516db46be25c33fb26e203287f2a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float fmaxf</definition>
        <argsstring>(float x, float y)</argsstring>
        <name>fmaxf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="141" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1abf48322ad520d7b12542edf990dde8c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float fminf</definition>
        <argsstring>(float x, float y)</argsstring>
        <name>fminf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="145" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a9255f64a2585463fea365c8273d23904" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float fmodf</definition>
        <argsstring>(float x, float y)</argsstring>
        <name>fmodf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="149" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a56e8cba742e2f80647903dac9c93eb37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float frexpf</definition>
        <argsstring>(float x, int *nptr)</argsstring>
        <name>frexpf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>nptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="153" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="153" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a2880a4ebf5500aeb74fb01340ea91215" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float hypotf</definition>
        <argsstring>(float x, float y)</argsstring>
        <name>hypotf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="157" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="157" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1af311c85b15faf1e0bb456ccb5bd37748" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float ilogbf</definition>
        <argsstring>(float x)</argsstring>
        <name>ilogbf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="161" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="161" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1ab8b25d1859c58659aa30c4c0ac246e42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ int</type>
        <definition>__device__ int isfinite</definition>
        <argsstring>(float a)</argsstring>
        <name>isfinite</name>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="165" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="165" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1aa20a4cf0692f91a7c9a4e1abea0bf037" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ unsigned</type>
        <definition>__device__ unsigned isinf</definition>
        <argsstring>(float a)</argsstring>
        <name>isinf</name>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="169" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="169" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a11c844744eb8f2c99a7ee4f8a1d43bcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ unsigned</type>
        <definition>__device__ unsigned isnan</definition>
        <argsstring>(float a)</argsstring>
        <name>isnan</name>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="173" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="173" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1aba3e4bad4109f5e8509dc1925fade7ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float j0f</definition>
        <argsstring>(float x)</argsstring>
        <name>j0f</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="177" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a462954bfc6ada6132f28bd7fce41334e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float j1f</definition>
        <argsstring>(float x)</argsstring>
        <name>j1f</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="181" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="181" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1adcd52a43c4f2d8d9148a022d6d6851dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float jnf</definition>
        <argsstring>(int n, float x)</argsstring>
        <name>jnf</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="185" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="185" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a7d82accff3d8e3307d61e028c19c30cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float ldexpf</definition>
        <argsstring>(float x, int exp)</argsstring>
        <name>ldexpf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>exp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="189" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="189" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1af7ffab2d685130195ba255e954e21130" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float lgammaf</definition>
        <argsstring>(float x)</argsstring>
        <name>lgammaf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="193" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="193" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a7d4af230b5deee73fbfa9801f44f0616" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ long long int</type>
        <definition>__device__ long long int llrintf</definition>
        <argsstring>(float x)</argsstring>
        <name>llrintf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="202" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="202" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1af2a7fe8fb57e5b39886d776f75fdf5d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ long long int</type>
        <definition>__device__ long long int llroundf</definition>
        <argsstring>(float x)</argsstring>
        <name>llroundf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="208" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="208" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1ab49e218cf742a0eb08e5516dd5160585" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float log10f</definition>
        <argsstring>(float x)</argsstring>
        <name>log10f</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="214" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="214" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a9d53128ab5f7d6ebc4798f243481a6d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float log1pf</definition>
        <argsstring>(float x)</argsstring>
        <name>log1pf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="218" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="218" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1afc9ae1bd4ebb4cd9533a50f1bf486f08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float log2f</definition>
        <argsstring>(float x)</argsstring>
        <name>log2f</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="222" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="222" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a9a86f57d529d7000b04cb30e859a21b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float logbf</definition>
        <argsstring>(float x)</argsstring>
        <name>logbf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="226" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="226" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1acdaf041c4071f63cba0e51658b89ffa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float logf</definition>
        <argsstring>(float x)</argsstring>
        <name>logf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="230" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="230" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a639a876a55da8142dcd917ce6c12c27d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ long int</type>
        <definition>__device__ long int lrintf</definition>
        <argsstring>(float x)</argsstring>
        <name>lrintf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="234" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="234" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a4d10236b2afbafda2fd85825811b84e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ long int</type>
        <definition>__device__ long int lroundf</definition>
        <argsstring>(float x)</argsstring>
        <name>lroundf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="240" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="240" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a29d1bccc8c41222d1c821c28b00d5ccc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__host__ float modff</definition>
        <argsstring>(float x, float *iptr)</argsstring>
        <name>modff</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>iptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="245" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="245" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a372c640f910303dc4a7f17ce684322c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float nanf</definition>
        <argsstring>(const char *tagp)</argsstring>
        <name>nanf</name>
        <param>
          <type>const char *</type>
          <declname>tagp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="249" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="249" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a53c10d923def0d85af5a2b65b1a021f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float nearbyintf</definition>
        <argsstring>(float x)</argsstring>
        <name>nearbyintf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="253" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="253" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1afdc46e118e6c35fdf6573cef1492b20d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__host__ float nextafterf</definition>
        <argsstring>(float x, float y)</argsstring>
        <name>nextafterf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="257" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="257" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a921612f74ed8a71e62d40c547cab6dcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float norm3df</definition>
        <argsstring>(float a, float b, float c)</argsstring>
        <name>norm3df</name>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="261" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="261" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a2334d82818e94dcac4251cd045e1e281" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float norm4df</definition>
        <argsstring>(float a, float b, float c, float d)</argsstring>
        <name>norm4df</name>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float</type>
          <declname>c</declname>
        </param>
        <param>
          <type>float</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="266" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="266" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a102ea4753919ee208c9b294e1c053cf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float normcdff</definition>
        <argsstring>(float y)</argsstring>
        <name>normcdff</name>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="273" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="273" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a1c0a28ad7f7555ab16e0a1e409690174" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float normcdfinvf</definition>
        <argsstring>(float y)</argsstring>
        <name>normcdfinvf</name>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="277" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="277" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a74b830b9181e04140bc081140c990543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float normf</definition>
        <argsstring>(int dim, const float *a)</argsstring>
        <name>normf</name>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="281" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="281" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1ab519b517c0036b3604d602f716a919dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float powf</definition>
        <argsstring>(float x, float y)</argsstring>
        <name>powf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="290" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="290" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a937164a0d40347821ad16b5cb5069c92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float rcbrtf</definition>
        <argsstring>(float x)</argsstring>
        <name>rcbrtf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="294" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="294" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a36179ffa51305653b55c1e76f44154ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float remainderf</definition>
        <argsstring>(float x, float y)</argsstring>
        <name>remainderf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="298" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="298" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1aa0d8ebba46ca705859d1c7462b53118d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float remquof</definition>
        <argsstring>(float x, float y, int *quo)</argsstring>
        <name>remquof</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>quo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="302" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="302" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1aa53c41aebb09f501ea5e09a01145a932" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float rhypotf</definition>
        <argsstring>(float x, float y)</argsstring>
        <name>rhypotf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="306" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="306" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a7791cd93108ffc6d24524f2e8635ccfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float rintf</definition>
        <argsstring>(float x)</argsstring>
        <name>rintf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="310" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="310" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1af97228e858bd11e2934c26cf54a1dff6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float rnorm3df</definition>
        <argsstring>(float a, float b, float c)</argsstring>
        <name>rnorm3df</name>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="314" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="314" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a66a3b53292754ba1c455fb9b30b1e40a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float rnorm4df</definition>
        <argsstring>(float a, float b, float c, float d)</argsstring>
        <name>rnorm4df</name>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float</type>
          <declname>c</declname>
        </param>
        <param>
          <type>float</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="319" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="319" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a169f84a202963d20fe5e2874fe4d2145" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float rnormf</definition>
        <argsstring>(int dim, const float *a)</argsstring>
        <name>rnormf</name>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="325" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="325" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1aa1c1521079e51b4f54771b16a7f8aeea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float roundf</definition>
        <argsstring>(float x)</argsstring>
        <name>roundf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="334" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="334" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1ac94fa1e3aea5f190b7ceb47917e722be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float scalblnf</definition>
        <argsstring>(float x, long int n)</argsstring>
        <name>scalblnf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>long int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="338" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="338" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1ae5d0f588dbdbce27abe79ac3280a429f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float scalbnf</definition>
        <argsstring>(float x, int n)</argsstring>
        <name>scalbnf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="342" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="342" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a41ad29746811ca87119628ad4a811356" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ int</type>
        <definition>__device__ int signbit</definition>
        <argsstring>(float a)</argsstring>
        <name>signbit</name>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="346" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="346" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a9456ff9df91a3874180d89a94b36fd46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ void</type>
        <definition>__device__ void sincosf</definition>
        <argsstring>(float x, float *sptr, float *cptr)</argsstring>
        <name>sincosf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>sptr</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>cptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="350" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="350" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1aab8978300988c385e0aa4b6cba44225e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ void</type>
        <definition>__device__ void sincospif</definition>
        <argsstring>(float x, float *sptr, float *cptr)</argsstring>
        <name>sincospif</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>sptr</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>cptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="355" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="355" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a4677d53159664972c54bb697b9c1bace" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float sinf</definition>
        <argsstring>(float x)</argsstring>
        <name>sinf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="360" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="360" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a72c262cde9f805d08492c316fc0158d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float sinhf</definition>
        <argsstring>(float x)</argsstring>
        <name>sinhf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="364" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="364" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a561a1e0eab1092d294d331caf9bb93c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float tanf</definition>
        <argsstring>(float x)</argsstring>
        <name>tanf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="368" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="368" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a7d925743801795775ca98ae83d4ba6e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float tanhf</definition>
        <argsstring>(float x)</argsstring>
        <name>tanhf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="372" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="372" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a0e556a6b5d691277e3234f4548d9ae23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float tgammaf</definition>
        <argsstring>(float x)</argsstring>
        <name>tgammaf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="376" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="376" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a86499f47865e04e1ca845927f41b3322" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float truncf</definition>
        <argsstring>(float x)</argsstring>
        <name>truncf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="380" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="380" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a87d0270856e29b6a34038c017513f811" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float y0f</definition>
        <argsstring>(float x)</argsstring>
        <name>y0f</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="384" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="384" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1abba94fdcb53f6a12f8bf5191697e8359" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float y1f</definition>
        <argsstring>(float x)</argsstring>
        <name>y1f</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="388" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="388" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a383612b6d78a55003343521bca193ecd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float ynf</definition>
        <argsstring>(int n, float x)</argsstring>
        <name>ynf</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="392" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="392" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a6fc515121cf408a92ef611a3c6fdc5cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float cospif</definition>
        <argsstring>(float x)</argsstring>
        <name>cospif</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="396" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="396" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a85a985e497f4199be19462387e062ae2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float sinpif</definition>
        <argsstring>(float x)</argsstring>
        <name>sinpif</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="400" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="400" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1acb80df3c252b3feb3cc88f992b955a14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float sqrtf</definition>
        <argsstring>(float x)</argsstring>
        <name>sqrtf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="404" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="404" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a5a9bc318028131cfd13d10abfae1ae13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float rsqrtf</definition>
        <argsstring>(float x)</argsstring>
        <name>rsqrtf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="408" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="408" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1afb79b8e69174e322b3d5da70cd363521" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double acos</definition>
        <argsstring>(double x)</argsstring>
        <name>acos</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="417" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="417" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a41d6a7aee6b7e78987c1ea9633f6467a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double acosh</definition>
        <argsstring>(double x)</argsstring>
        <name>acosh</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="421" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="421" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a8328d1b24f630bfc9747b57a13e66e79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double asin</definition>
        <argsstring>(double x)</argsstring>
        <name>asin</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="425" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="425" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a10334b3ee5d54b6e6959102709af23ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double asinh</definition>
        <argsstring>(double x)</argsstring>
        <name>asinh</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="429" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="429" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a875675909708a2bd6d4e889df0e7791c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double atan</definition>
        <argsstring>(double x)</argsstring>
        <name>atan</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="433" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="433" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1add5ea203222910d0fba30d3bcfd6fbfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double atan2</definition>
        <argsstring>(double y, double x)</argsstring>
        <name>atan2</name>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="437" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="437" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1aa8da8c2dc65bc77ced8e92475d423cb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double atanh</definition>
        <argsstring>(double x)</argsstring>
        <name>atanh</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="441" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="441" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a86e3a3d10161a10246658ab77fac8311" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double cbrt</definition>
        <argsstring>(double x)</argsstring>
        <name>cbrt</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="445" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="445" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a2125a3b335ccc8f1fb20ee51e50f2861" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double ceil</definition>
        <argsstring>(double x)</argsstring>
        <name>ceil</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="449" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="449" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1aa06f087bfaf3245b3d78e30658eb9b2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double copysign</definition>
        <argsstring>(double x, double y)</argsstring>
        <name>copysign</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="453" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="453" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a3f1d2831497e6fa3f0072395e13a8ecf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double cos</definition>
        <argsstring>(double x)</argsstring>
        <name>cos</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="457" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="457" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1acb71d08327c30ff681f47d5cefdf661f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double cosh</definition>
        <argsstring>(double x)</argsstring>
        <name>cosh</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="461" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="461" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a0b7c24b9064401951cb1e66a23b44a4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double cospi</definition>
        <argsstring>(double x)</argsstring>
        <name>cospi</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="465" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="465" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1aaeae8990c401dc1ad0426de1350560b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double cyl_bessel_i0</definition>
        <argsstring>(double x)</argsstring>
        <name>cyl_bessel_i0</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="469" column="1"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a99d834ea92d9a446f54e7675eef24baf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double cyl_bessel_i1</definition>
        <argsstring>(double x)</argsstring>
        <name>cyl_bessel_i1</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="470" column="1"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1abd196c4f3bc4260ffe99944b2400b951" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double erf</definition>
        <argsstring>(double x)</argsstring>
        <name>erf</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="471" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="471" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1ae5fb0600e76f923d822e51b6148a9d1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double erfc</definition>
        <argsstring>(double x)</argsstring>
        <name>erfc</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="475" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="475" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a92fd94f629159b31e75d1c08b04c2949" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double erfcinv</definition>
        <argsstring>(double x)</argsstring>
        <name>erfcinv</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="479" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="479" bodyend="482"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a31bd5945637fd6790091b3a0f77b9169" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double erfcx</definition>
        <argsstring>(double x)</argsstring>
        <name>erfcx</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="483" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="483" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1aef012e8d10e9ef980940f65630f77ae3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double erfinv</definition>
        <argsstring>(double x)</argsstring>
        <name>erfinv</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="487" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="487" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a15c1324292b08058007e4be047228e84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double exp</definition>
        <argsstring>(double x)</argsstring>
        <name>exp</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="491" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="491" bodyend="494"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a9c59e13661f0e53fd46f1cfa231f5ff2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double exp10</definition>
        <argsstring>(double x)</argsstring>
        <name>exp10</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="495" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="495" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a033d73c657d39a2ac311c0ecb0eedd4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double exp2</definition>
        <argsstring>(double x)</argsstring>
        <name>exp2</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="499" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="499" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a47772b17638c6b764d5ca5a6b8df1018" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double expm1</definition>
        <argsstring>(double x)</argsstring>
        <name>expm1</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="503" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="503" bodyend="506"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a4f9fbe6c98f94000badf4ecf3211c128" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double fabs</definition>
        <argsstring>(double x)</argsstring>
        <name>fabs</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="507" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="507" bodyend="510"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1abfbecf3022a22ba02e34a643158553e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double fdim</definition>
        <argsstring>(double x, double y)</argsstring>
        <name>fdim</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="511" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="511" bodyend="514"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a3ebd9053b7b5e779d41ef84d507f3f0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__host__ double fdivide</definition>
        <argsstring>(double x, double y)</argsstring>
        <name>fdivide</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="515" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="515" bodyend="518"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a69dde74ca6877f733f0940d319b301f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double floor</definition>
        <argsstring>(double x)</argsstring>
        <name>floor</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="519" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="519" bodyend="522"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1aff2117f6f3c4ff8a2aa4ce48a0ff2070" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double fma</definition>
        <argsstring>(double x, double y, double z)</argsstring>
        <name>fma</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="523" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="523" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a0049356a61c447a30f7991d1a1218535" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double fmax</definition>
        <argsstring>(double x, double y)</argsstring>
        <name>fmax</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="527" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="527" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1ac970b9542e2d3e8e5d1e3ebb6a705dde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double fmin</definition>
        <argsstring>(double x, double y)</argsstring>
        <name>fmin</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="531" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="531" bodyend="534"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a5e4d96de745c62d885d0a3a6bc838b86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double fmod</definition>
        <argsstring>(double x, double y)</argsstring>
        <name>fmod</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="535" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="535" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a5e6cb430e79005cf69da9eda61d3e4b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double frexp</definition>
        <argsstring>(double x, int *y)</argsstring>
        <name>frexp</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="539" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="539" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a37292eff59f782b537102975dc40f10c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double hypot</definition>
        <argsstring>(double x, double y)</argsstring>
        <name>hypot</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="543" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="543" bodyend="546"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a4e6eb4d5be7b218996e4abbea3893eb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double ilogb</definition>
        <argsstring>(double x)</argsstring>
        <name>ilogb</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="547" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="547" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a41a27192d7a26982f710de42ef035703" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ int</type>
        <definition>__device__ int isfinite</definition>
        <argsstring>(double x)</argsstring>
        <name>isfinite</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="551" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="551" bodyend="554"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a8aa6ea4f14e8940cf78657744a1a8952" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ unsigned</type>
        <definition>__device__ unsigned isinf</definition>
        <argsstring>(double x)</argsstring>
        <name>isinf</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="555" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="555" bodyend="558"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1ad0dba00731cb22f6f5f0e947d334d20d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ unsigned</type>
        <definition>__device__ unsigned isnan</definition>
        <argsstring>(double x)</argsstring>
        <name>isnan</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="559" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="559" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1aa4ad8a42b2f663d5fe5edbc87f5f3cb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double j0</definition>
        <argsstring>(double x)</argsstring>
        <name>j0</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="563" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="563" bodyend="566"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a631cf3a77e7dc10ab9b566922517105c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double j1</definition>
        <argsstring>(double x)</argsstring>
        <name>j1</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="567" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="567" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a643b020a4c66860acc8c0f0a76f7b67e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double jn</definition>
        <argsstring>(int n, double x)</argsstring>
        <name>jn</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="571" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="571" bodyend="574"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1add1f70e2ce16b3c985aec8208aad8c61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double ldexp</definition>
        <argsstring>(double x, int exp)</argsstring>
        <name>ldexp</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>exp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="575" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="575" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a402aaedc732b2eabf59abc07d744ed35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double lgamma</definition>
        <argsstring>(double x)</argsstring>
        <name>lgamma</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="579" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="579" bodyend="587"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a6d2532344fe30f7f8988e031aac8e1cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ long long int</type>
        <definition>__device__ long long int llrint</definition>
        <argsstring>(double x)</argsstring>
        <name>llrint</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="588" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="588" bodyend="592"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a6e401c3a6f291b874fc95b8480bcad02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ long long int</type>
        <definition>__device__ long long int llround</definition>
        <argsstring>(double x)</argsstring>
        <name>llround</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="593" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="593" bodyend="597"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a28ce8e15ef5149c271eba95663becba2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double log</definition>
        <argsstring>(double x)</argsstring>
        <name>log</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="598" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="598" bodyend="601"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a0aed82d571362c58f9486385383e7f64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double log10</definition>
        <argsstring>(double x)</argsstring>
        <name>log10</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="602" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="602" bodyend="605"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a3c680d660d75780ef53075a439211626" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double log1p</definition>
        <argsstring>(double x)</argsstring>
        <name>log1p</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="606" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="606" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1ac15d49c9960470b4791eafa0607ca777" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double log2</definition>
        <argsstring>(double x)</argsstring>
        <name>log2</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="610" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="610" bodyend="613"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a24e6d5c7904a61d50055d27ffe6d8fdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double logb</definition>
        <argsstring>(double x)</argsstring>
        <name>logb</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="614" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="614" bodyend="617"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a353f5748b7addbae162dd679abf829fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ long int</type>
        <definition>__device__ long int lrint</definition>
        <argsstring>(double x)</argsstring>
        <name>lrint</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="618" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="618" bodyend="622"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a9fdb5ef303c94dc5c428dbdb534ed1fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ long int</type>
        <definition>__device__ long int lround</definition>
        <argsstring>(double x)</argsstring>
        <name>lround</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="623" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="623" bodyend="627"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a36767023601d4df07854d631e74dce69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double modf</definition>
        <argsstring>(double x, double *iptr)</argsstring>
        <name>modf</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>iptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="628" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="628" bodyend="631"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a6df5511321a5ac0dfe22389b728a8a9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double nan</definition>
        <argsstring>(const char *tagp)</argsstring>
        <name>nan</name>
        <param>
          <type>const char *</type>
          <declname>tagp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="632" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="632" bodyend="635"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a2316a104cfda8362208d52238181fbfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double nearbyint</definition>
        <argsstring>(double x)</argsstring>
        <name>nearbyint</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="636" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="636" bodyend="639"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1af46b3ad97567ae96f7148a10537c8f5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double nextafter</definition>
        <argsstring>(double x, double y)</argsstring>
        <name>nextafter</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="640" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="640" bodyend="643"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1aa713f7e90f6d039ac7bbcc5f5841bead" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double norm</definition>
        <argsstring>(int x, const double *d)</argsstring>
        <name>norm</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="644" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="644" bodyend="651"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a330808c6a122bd9755deb4d952c6add2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double norm3d</definition>
        <argsstring>(double a, double b, double c)</argsstring>
        <name>norm3d</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <param>
          <type>double</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="652" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="652" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1ac2d70124f92e537e2e9f33052f59501b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double norm4d</definition>
        <argsstring>(double a, double b, double c, double d)</argsstring>
        <name>norm4d</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <param>
          <type>double</type>
          <declname>c</declname>
        </param>
        <param>
          <type>double</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="657" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="657" bodyend="662"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a8368e3ba7981942344d0be3b5d817e3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double normcdf</definition>
        <argsstring>(double y)</argsstring>
        <name>normcdf</name>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="663" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="663" bodyend="666"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a78e93df6c3fbade8628d33e11fc94595" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double normcdfinv</definition>
        <argsstring>(double y)</argsstring>
        <name>normcdfinv</name>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="667" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="667" bodyend="670"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a6d36757715384dc18e0483aa1f04f6c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double pow</definition>
        <argsstring>(double x, double y)</argsstring>
        <name>pow</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="671" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="671" bodyend="674"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a3f5dd3f9b81f73c644d82754986ccce6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double rcbrt</definition>
        <argsstring>(double x)</argsstring>
        <name>rcbrt</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="675" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="675" bodyend="678"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a852e83c233f09c146c492bfd752e0dd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double remainder</definition>
        <argsstring>(double x, double y)</argsstring>
        <name>remainder</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="679" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="679" bodyend="682"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a4235a6814bb94b3faaf73a324210c58d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double remquo</definition>
        <argsstring>(double x, double y, int *quo)</argsstring>
        <name>remquo</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>quo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="683" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="683" bodyend="686"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1af1dfb4d01feaa01b0b1ff15cf57ebbc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double rhypot</definition>
        <argsstring>(double x, double y)</argsstring>
        <name>rhypot</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="687" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="687" bodyend="690"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a3b8026edb2f2e441669845f0f3fa3bf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double rint</definition>
        <argsstring>(double x)</argsstring>
        <name>rint</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="691" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="691" bodyend="694"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a1ac4eff7fecc1121d5dcfdebc3314e80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double rnorm3d</definition>
        <argsstring>(double a, double b, double c)</argsstring>
        <name>rnorm3d</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <param>
          <type>double</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="695" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="695" bodyend="698"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a039d37d2d8d44f074e057489a439a758" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double rnorm4d</definition>
        <argsstring>(double a, double b, double c, double d)</argsstring>
        <name>rnorm4d</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <param>
          <type>double</type>
          <declname>c</declname>
        </param>
        <param>
          <type>double</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="699" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="699" bodyend="702"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a084039517f12059ee5dfa214ad69a223" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double rnorm</definition>
        <argsstring>(int dim, const double *t)</argsstring>
        <name>rnorm</name>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="703" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="703" bodyend="711"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1abefba28ee84ef32c44d417cfd4f615d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double round</definition>
        <argsstring>(double x)</argsstring>
        <name>round</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="712" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="712" bodyend="715"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1af799c5cd74e63236a4a08296cb12ccbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double rsqrt</definition>
        <argsstring>(double x)</argsstring>
        <name>rsqrt</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="716" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="716" bodyend="719"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a7c931cea8bc2cfe694a6170379e5914f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double scalbln</definition>
        <argsstring>(double x, long int n)</argsstring>
        <name>scalbln</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>long int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="720" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="720" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a4923bed52b438e5bfbf574bb8ce26542" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double scalbn</definition>
        <argsstring>(double x, int n)</argsstring>
        <name>scalbn</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="724" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="724" bodyend="727"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a323f01add19d40dae808f37bebc137e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ int</type>
        <definition>__device__ int signbit</definition>
        <argsstring>(double x)</argsstring>
        <name>signbit</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="728" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="728" bodyend="731"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a3ebbca20a2937d1fe51329402880df85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double sin</definition>
        <argsstring>(double x)</argsstring>
        <name>sin</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="732" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="732" bodyend="735"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1abe0e6a063a8f38850b0323933cf3320b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ void</type>
        <definition>__device__ void sincos</definition>
        <argsstring>(double x, double *sptr, double *cptr)</argsstring>
        <name>sincos</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>sptr</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>cptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="736" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="736" bodyend="740"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1afc99d7acfc1b14dcb6f6db56147d2560" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ void</type>
        <definition>__device__ void sincospi</definition>
        <argsstring>(double x, double *sptr, double *cptr)</argsstring>
        <name>sincospi</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>sptr</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>cptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="741" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="741" bodyend="745"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1aabc5c0e23e1550a6cc936baa9d65a61a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double sinh</definition>
        <argsstring>(double x)</argsstring>
        <name>sinh</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="746" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="746" bodyend="749"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a06ae86e791c45c081184e605f984e733" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double sinpi</definition>
        <argsstring>(double x)</argsstring>
        <name>sinpi</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="750" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="750" bodyend="753"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a1c6fe34b4ac091e40eceeb0bae58459f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double sqrt</definition>
        <argsstring>(double x)</argsstring>
        <name>sqrt</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="754" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="754" bodyend="757"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a17d00b521d79b4a4404cc593839f0b7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double tan</definition>
        <argsstring>(double x)</argsstring>
        <name>tan</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="758" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="758" bodyend="761"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1adf7b9660a2c53c91664263d39b09242d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double tanh</definition>
        <argsstring>(double x)</argsstring>
        <name>tanh</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="762" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="762" bodyend="765"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1aecfb49e21fc767c952827d42268c0d48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double tgamma</definition>
        <argsstring>(double x)</argsstring>
        <name>tgamma</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="766" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="766" bodyend="769"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1aaa2c1b49a1f4aa25f8ce49236089f2a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double trunc</definition>
        <argsstring>(double x)</argsstring>
        <name>trunc</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="770" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="770" bodyend="773"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a6cf6a465d2d541cb9ccad53f2c57f9b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double y0</definition>
        <argsstring>(double x)</argsstring>
        <name>y0</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="774" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="774" bodyend="777"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a2373edb1ccd771c1c9ccc7ff30472ba8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double y1</definition>
        <argsstring>(double x)</argsstring>
        <name>y1</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="778" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="778" bodyend="781"/>
      </memberdef>
      <memberdef kind="function" id="math__functions_8cpp_1a0b7143369064cbd7f882912b9af8e6c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__device__ double</type>
        <definition>__device__ double yn</definition>
        <argsstring>(int n, double x)</argsstring>
        <name>yn</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" line="782" column="1" bodyfile="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp" bodystart="782" bodyend="785"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment">Copyright<sp/>(c)<sp/>2015-2017<sp/>Advanced<sp/>Micro<sp/>Devices,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment">Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="6"><highlight class="comment">of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="7"><highlight class="comment">in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="8"><highlight class="comment">to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="9"><highlight class="comment">copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="10"><highlight class="comment">furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"></highlight></codeline>
<codeline lineno="12"><highlight class="comment">The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in</highlight></codeline>
<codeline lineno="13"><highlight class="comment">all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="16"><highlight class="comment">IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="17"><highlight class="comment">FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="18"><highlight class="comment">AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="19"><highlight class="comment">LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="20"><highlight class="comment">OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN</highlight></codeline>
<codeline lineno="21"><highlight class="comment">THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="22"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hc.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;grid_launch.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hc_math.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;device_util.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hip/hcc_detail/device_functions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hip/hip_runtime.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>acosf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::acosf(x);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>acoshf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::acoshf(x);</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>asinf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::asinf(x);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>asinhf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::asinhf(x);</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>atan2f(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::atan2f(y,<sp/>x);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>atanf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::atanf(x);</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>atanhf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::atanhf(x);</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cbrtf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::cbrtf(x);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ceilf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::ceilf(x);</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>copysignf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::copysignf(x,<sp/>y);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cosf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::cosf(x);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>coshf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::coshf(x);</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cyl_bessel_i0f(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x);</highlight></codeline>
<codeline lineno="80"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cyl_bessel_i1f(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>erfcf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::erfcf(x);</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>erfcinvf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__hip_erfinvf(1<sp/>-<sp/>y);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>erfcxf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::expf(x*x)*hc::precise_math::erfcf(x);</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>erff(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::erff(x);</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>erfinvf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__hip_erfinvf(y);</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>exp10f(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::exp10f(x);</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>exp2f(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::exp2f(x);</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>expf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::expf(x);</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>expm1f(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::expm1f(x);</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>abs(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>&gt;=<sp/>0<sp/>?<sp/>x<sp/>:<sp/>-x;<sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>-<sp/>optimize<sp/>with<sp/>OCML</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fabsf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::fabsf(x);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fdimf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::fdimf(x,<sp/>y);</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fdividef(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x/y;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>floorf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::floorf(x);</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fmaf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::fmaf(x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fmaxf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::fmaxf(x,<sp/>y);</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fminf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::fminf(x,<sp/>y);</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fmodf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::fmodf(x,<sp/>y);</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>frexpf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*nptr)</highlight></codeline>
<codeline lineno="154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::frexpf(x,<sp/>nptr);</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>hypotf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::hypotf(x,<sp/>y);</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ilogbf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::ilogbf(x);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isfinite(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::isfinite(a);</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>isinf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::isinf(a);</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>isnan(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::isnan(a);</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>j0f(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__hip_j0f(x);</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>j1f(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__hip_j1f(x);</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>jnf(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__hip_jnf(n,<sp/>x);</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ldexpf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exp)</highlight></codeline>
<codeline lineno="190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::ldexpf(x,<sp/>exp);</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lgammaf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>x<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(y<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>+=<sp/>logf(y--);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>llrintf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>hc::precise_math::roundf(x);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>llroundf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>hc::precise_math::roundf(x);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>log10f(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::log10f(x);</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>log1pf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::log1pf(x);</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>log2f(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::log2f(x);</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>logbf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="227"><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::logbf(x);</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>logf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::logf(x);</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lrintf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>hc::precise_math::roundf(x);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lroundf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>hc::precise_math::roundf(x);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>modff(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*iptr)</highlight></codeline>
<codeline lineno="246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::modff(x,<sp/>iptr);</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>nanf(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tagp)</highlight></codeline>
<codeline lineno="250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::nanf((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)*tagp);</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>nearbyintf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::nearbyintf(x);</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>nextafterf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::nextafter(x,<sp/>y);</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>norm3df(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>a*a<sp/>+<sp/>b*b<sp/>+<sp/>c*c;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::sqrtf(x);</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>norm4df(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d)</highlight></codeline>
<codeline lineno="267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>a*a<sp/>+<sp/>b*b;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>c*c<sp/>+<sp/>d*d;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::sqrtf(x+y);</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>normcdff(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((hc::precise_math::erff(y)/1.41421356237)<sp/>+<sp/>1)/2;</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>normcdfinvf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="278"><highlight class="normal">{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HIP_SQRT_2<sp/>*<sp/>__hip_erfinvf(2*y-1);</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>normf(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*a)</highlight></codeline>
<codeline lineno="282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;dim;i++)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>hc::precise_math::fmaf(a[i],<sp/>a[i],<sp/>x);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::sqrtf(x);</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>powf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="291"><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::powf(x,<sp/>y);</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rcbrtf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::rcbrtf(x);</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>remainderf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::remainderf(x,<sp/>y);</highlight></codeline>
<codeline lineno="301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="302"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>remquof(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*quo)</highlight></codeline>
<codeline lineno="303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::remquof(x,<sp/>y,<sp/>quo);</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rhypotf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1/hc::precise_math::hypotf(x,<sp/>y);</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rintf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::roundf(x);</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rnorm3df(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="315"><highlight class="normal">{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>a*a<sp/>+<sp/>b*b<sp/>+<sp/>c*c;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1/hc::precise_math::sqrtf(x);</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rnorm4df(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d)</highlight></codeline>
<codeline lineno="320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>a*a<sp/>+<sp/>b*b;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>c*c<sp/>+<sp/>d*d;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1/hc::precise_math::sqrtf(x+y);</highlight></codeline>
<codeline lineno="324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="325"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rnormf(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>a)</highlight></codeline>
<codeline lineno="326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;dim;i++)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>hc::precise_math::fmaf(a[i],<sp/>a[i],<sp/>x);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1/hc::precise_math::sqrtf(x);</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>roundf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="335"><highlight class="normal">{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::roundf(x);</highlight></codeline>
<codeline lineno="337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="338"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scalblnf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="339"><highlight class="normal">{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::scalb(x,<sp/>n);</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scalbnf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="343"><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::scalbnf(x,<sp/>n);</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="346"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>signbit(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a)</highlight></codeline>
<codeline lineno="347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::signbit(a);</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sincosf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*sptr,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*cptr)</highlight></codeline>
<codeline lineno="351"><highlight class="normal">{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>*sptr<sp/>=<sp/>hc::precise_math::sinf(x);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>*cptr<sp/>=<sp/>hc::precise_math::cosf(x);</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="355"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sincospif(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*sptr,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*cptr)</highlight></codeline>
<codeline lineno="356"><highlight class="normal">{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>*sptr<sp/>=<sp/>hc::precise_math::sinpif(x);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>*cptr<sp/>=<sp/>hc::precise_math::cospif(x);</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sinf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="361"><highlight class="normal">{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::sinf(x);</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sinhf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::sinhf(x);</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="368"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tanf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::tanf(x);</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tanhf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::tanhf(x);</highlight></codeline>
<codeline lineno="375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="376"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tgammaf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="377"><highlight class="normal">{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::tgammaf(x);</highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="380"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>truncf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="381"><highlight class="normal">{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::truncf(x);</highlight></codeline>
<codeline lineno="383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="384"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y0f(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="385"><highlight class="normal">{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__hip_y0f(x);</highlight></codeline>
<codeline lineno="387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="388"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y1f(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__hip_y1f(x);</highlight></codeline>
<codeline lineno="391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ynf(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="393"><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__hip_ynf(n,<sp/>x);</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cospif(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="397"><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::cospif(x);</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sinpif(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="401"><highlight class="normal">{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::sinpif(x);</highlight></codeline>
<codeline lineno="403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="404"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sqrtf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="405"><highlight class="normal">{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::sqrtf(x);</highlight></codeline>
<codeline lineno="407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="408"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rsqrtf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="409"><highlight class="normal">{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::rsqrtf(x);</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/>*<sp/>Double<sp/>precision<sp/>device<sp/>math<sp/>functions</highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>acos(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="418"><highlight class="normal">{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::acos(x);</highlight></codeline>
<codeline lineno="420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="421"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>acosh(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="422"><highlight class="normal">{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::acosh(x);</highlight></codeline>
<codeline lineno="424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="425"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>asin(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="426"><highlight class="normal">{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::asin(x);</highlight></codeline>
<codeline lineno="428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="429"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>asinh(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="430"><highlight class="normal">{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::asinh(x);</highlight></codeline>
<codeline lineno="432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="433"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>atan(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="434"><highlight class="normal">{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::atan(x);</highlight></codeline>
<codeline lineno="436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="437"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>atan2(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="438"><highlight class="normal">{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::atan2(y,<sp/>x);</highlight></codeline>
<codeline lineno="440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="441"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>atanh(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="442"><highlight class="normal">{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::atanh(x);</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cbrt(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="446"><highlight class="normal">{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::cbrt(x);</highlight></codeline>
<codeline lineno="448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="449"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ceil(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="450"><highlight class="normal">{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::ceil(x);</highlight></codeline>
<codeline lineno="452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="453"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>copysign(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="454"><highlight class="normal">{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::copysign(x,<sp/>y);</highlight></codeline>
<codeline lineno="456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="457"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cos(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="458"><highlight class="normal">{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::cos(x);</highlight></codeline>
<codeline lineno="460"><highlight class="normal">}</highlight></codeline>
<codeline lineno="461"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cosh(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="462"><highlight class="normal">{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::cosh(x);</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cospi(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="466"><highlight class="normal">{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::cospi(x);</highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cyl_bessel_i0(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x);</highlight></codeline>
<codeline lineno="470"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cyl_bessel_i1(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x);</highlight></codeline>
<codeline lineno="471"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>erf(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="472"><highlight class="normal">{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::erf(x);</highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="475"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>erfc(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="476"><highlight class="normal">{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::erfc(x);</highlight></codeline>
<codeline lineno="478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="479"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>erfcinv(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="480"><highlight class="normal">{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__hip_erfinv(1<sp/>-<sp/>x);</highlight></codeline>
<codeline lineno="482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="483"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>erfcx(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="484"><highlight class="normal">{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::exp(x*x)*hc::precise_math::erf(x);</highlight></codeline>
<codeline lineno="486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="487"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>erfinv(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="488"><highlight class="normal">{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__hip_erfinv(x);</highlight></codeline>
<codeline lineno="490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="491"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>exp(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="492"><highlight class="normal">{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::exp(x);</highlight></codeline>
<codeline lineno="494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="495"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>exp10(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="496"><highlight class="normal">{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::exp10(x);</highlight></codeline>
<codeline lineno="498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="499"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>exp2(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="500"><highlight class="normal">{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::exp2(x);</highlight></codeline>
<codeline lineno="502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="503"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>expm1(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="504"><highlight class="normal">{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::expm1(x);</highlight></codeline>
<codeline lineno="506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="507"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fabs(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="508"><highlight class="normal">{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::fabs(x);</highlight></codeline>
<codeline lineno="510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="511"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fdim(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="512"><highlight class="normal">{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::fdim(x,<sp/>y);</highlight></codeline>
<codeline lineno="514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="515"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fdivide(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="516"><highlight class="normal">{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x/y;</highlight></codeline>
<codeline lineno="518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="519"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>floor(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="520"><highlight class="normal">{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::floor(x);</highlight></codeline>
<codeline lineno="522"><highlight class="normal">}</highlight></codeline>
<codeline lineno="523"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fma(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z)</highlight></codeline>
<codeline lineno="524"><highlight class="normal">{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::fma(x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="527"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fmax(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="528"><highlight class="normal">{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::fmax(x,<sp/>y);</highlight></codeline>
<codeline lineno="530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="531"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fmin(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="532"><highlight class="normal">{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::fmin(x,<sp/>y);</highlight></codeline>
<codeline lineno="534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="535"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fmod(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="536"><highlight class="normal">{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::fmod(x,<sp/>y);</highlight></codeline>
<codeline lineno="538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="539"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>frexp(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*y)</highlight></codeline>
<codeline lineno="540"><highlight class="normal">{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::frexp(x,<sp/>y);</highlight></codeline>
<codeline lineno="542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="543"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hypot(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="544"><highlight class="normal">{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::hypot(x,<sp/>y);</highlight></codeline>
<codeline lineno="546"><highlight class="normal">}</highlight></codeline>
<codeline lineno="547"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ilogb(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="548"><highlight class="normal">{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::ilogb(x);</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isfinite(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="552"><highlight class="normal">{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::isfinite(x);</highlight></codeline>
<codeline lineno="554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="555"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>isinf(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="556"><highlight class="normal">{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::isinf(x);</highlight></codeline>
<codeline lineno="558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="559"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>isnan(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="560"><highlight class="normal">{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::isnan(x);</highlight></codeline>
<codeline lineno="562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="563"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>j0(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="564"><highlight class="normal">{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__hip_j0(x);</highlight></codeline>
<codeline lineno="566"><highlight class="normal">}</highlight></codeline>
<codeline lineno="567"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>j1(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="568"><highlight class="normal">{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__hip_j1(x);</highlight></codeline>
<codeline lineno="570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="571"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>jn(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="572"><highlight class="normal">{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__hip_jn(n,<sp/>x);</highlight></codeline>
<codeline lineno="574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="575"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ldexp(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exp)</highlight></codeline>
<codeline lineno="576"><highlight class="normal">{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::ldexp(x,<sp/>exp);</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lgamma(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="580"><highlight class="normal">{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>x<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(y<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>+=<sp/>log(y--);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="588"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>llrint(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="589"><highlight class="normal">{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>hc::precise_math::round(x);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="593"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>llround(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="594"><highlight class="normal">{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>hc::precise_math::round(x);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="598"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>log(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="599"><highlight class="normal">{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::log(x);</highlight></codeline>
<codeline lineno="601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="602"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>log10(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="603"><highlight class="normal">{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::log10(x);</highlight></codeline>
<codeline lineno="605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="606"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>log1p(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="607"><highlight class="normal">{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::log1p(x);</highlight></codeline>
<codeline lineno="609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="610"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>log2(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="611"><highlight class="normal">{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::log2(x);</highlight></codeline>
<codeline lineno="613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="614"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>logb(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="615"><highlight class="normal">{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::logb(x);</highlight></codeline>
<codeline lineno="617"><highlight class="normal">}</highlight></codeline>
<codeline lineno="618"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lrint(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="619"><highlight class="normal">{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>hc::precise_math::round(x);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="622"><highlight class="normal">}</highlight></codeline>
<codeline lineno="623"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lround(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="624"><highlight class="normal">{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>hc::precise_math::round(x);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="627"><highlight class="normal">}</highlight></codeline>
<codeline lineno="628"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>modf(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*iptr)</highlight></codeline>
<codeline lineno="629"><highlight class="normal">{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::modf(x,<sp/>iptr);</highlight></codeline>
<codeline lineno="631"><highlight class="normal">}</highlight></codeline>
<codeline lineno="632"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nan(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tagp)</highlight></codeline>
<codeline lineno="633"><highlight class="normal">{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::nan((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)*tagp);</highlight></codeline>
<codeline lineno="635"><highlight class="normal">}</highlight></codeline>
<codeline lineno="636"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nearbyint(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="637"><highlight class="normal">{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::nearbyint(x);</highlight></codeline>
<codeline lineno="639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="640"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nextafter(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="641"><highlight class="normal">{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::nextafter(x,<sp/>y);</highlight></codeline>
<codeline lineno="643"><highlight class="normal">}</highlight></codeline>
<codeline lineno="644"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>norm(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*d)</highlight></codeline>
<codeline lineno="645"><highlight class="normal">{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;x;i++){</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>+=<sp/>d[i]*d[i];</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::sqrt(val);</highlight></codeline>
<codeline lineno="651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="652"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>norm3d(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="653"><highlight class="normal">{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>a*a<sp/>+<sp/>b*b<sp/>+<sp/>c*c;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::sqrt(x);</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>norm4d(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d)</highlight></codeline>
<codeline lineno="658"><highlight class="normal">{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>a*a<sp/>+<sp/>b*b;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>c*c<sp/>+<sp/>d*d;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::sqrt(x+y);</highlight></codeline>
<codeline lineno="662"><highlight class="normal">}</highlight></codeline>
<codeline lineno="663"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>normcdf(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="664"><highlight class="normal">{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((hc::precise_math::erf(y)/HIP_SQRT_2)<sp/>+<sp/>1)/2;</highlight></codeline>
<codeline lineno="666"><highlight class="normal">}</highlight></codeline>
<codeline lineno="667"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>normcdfinv(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="668"><highlight class="normal">{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HIP_SQRT_2<sp/>*<sp/>__hip_erfinv(2*y-1);</highlight></codeline>
<codeline lineno="670"><highlight class="normal">}</highlight></codeline>
<codeline lineno="671"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pow(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::pow(x,<sp/>y);</highlight></codeline>
<codeline lineno="674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="675"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rcbrt(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="676"><highlight class="normal">{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::rcbrt(x);</highlight></codeline>
<codeline lineno="678"><highlight class="normal">}</highlight></codeline>
<codeline lineno="679"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>remainder(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="680"><highlight class="normal">{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::remainder(x,<sp/>y);</highlight></codeline>
<codeline lineno="682"><highlight class="normal">}</highlight></codeline>
<codeline lineno="683"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>remquo(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*quo)</highlight></codeline>
<codeline lineno="684"><highlight class="normal">{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::remquo(x,<sp/>y,<sp/>quo);</highlight></codeline>
<codeline lineno="686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="687"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rhypot(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="688"><highlight class="normal">{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1/hc::precise_math::sqrt(x*x<sp/>+<sp/>y*y);</highlight></codeline>
<codeline lineno="690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="691"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rint(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="692"><highlight class="normal">{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::round(x);</highlight></codeline>
<codeline lineno="694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="695"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rnorm3d(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="696"><highlight class="normal">{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::rsqrt(a*a<sp/>+<sp/>b*b<sp/>+<sp/>c*c);</highlight></codeline>
<codeline lineno="698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="699"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rnorm4d(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d)</highlight></codeline>
<codeline lineno="700"><highlight class="normal">{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::rsqrt(a*a<sp/>+<sp/>b*b<sp/>+<sp/>c*c<sp/>+<sp/>d*d);</highlight></codeline>
<codeline lineno="702"><highlight class="normal">}</highlight></codeline>
<codeline lineno="703"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rnorm(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>t)</highlight></codeline>
<codeline lineno="704"><highlight class="normal">{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;dim;i++)</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>hc::precise_math::fma(t[i],<sp/>t[i],<sp/>x);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1/x;</highlight></codeline>
<codeline lineno="711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="712"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>round(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="713"><highlight class="normal">{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::round(x);</highlight></codeline>
<codeline lineno="715"><highlight class="normal">}</highlight></codeline>
<codeline lineno="716"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rsqrt(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="717"><highlight class="normal">{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::rsqrt(x);</highlight></codeline>
<codeline lineno="719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="720"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scalbln(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="721"><highlight class="normal">{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::scalb(x,<sp/>n);</highlight></codeline>
<codeline lineno="723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="724"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scalbn(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="725"><highlight class="normal">{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::scalbn(x,<sp/>n);</highlight></codeline>
<codeline lineno="727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="728"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>signbit(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="729"><highlight class="normal">{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::signbit(x);</highlight></codeline>
<codeline lineno="731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="732"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sin(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="733"><highlight class="normal">{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::sin(x);</highlight></codeline>
<codeline lineno="735"><highlight class="normal">}</highlight></codeline>
<codeline lineno="736"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sincos(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*sptr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*cptr)</highlight></codeline>
<codeline lineno="737"><highlight class="normal">{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>*sptr<sp/>=<sp/>hc::precise_math::sin(x);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>*cptr<sp/>=<sp/>hc::precise_math::cos(x);</highlight></codeline>
<codeline lineno="740"><highlight class="normal">}</highlight></codeline>
<codeline lineno="741"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sincospi(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*sptr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*cptr)</highlight></codeline>
<codeline lineno="742"><highlight class="normal">{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>*sptr<sp/>=<sp/>hc::precise_math::sinpi(x);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>*cptr<sp/>=<sp/>hc::precise_math::cospi(x);</highlight></codeline>
<codeline lineno="745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="746"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sinh(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="747"><highlight class="normal">{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::sinh(x);</highlight></codeline>
<codeline lineno="749"><highlight class="normal">}</highlight></codeline>
<codeline lineno="750"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sinpi(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="751"><highlight class="normal">{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::sinpi(x);</highlight></codeline>
<codeline lineno="753"><highlight class="normal">}</highlight></codeline>
<codeline lineno="754"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sqrt(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="755"><highlight class="normal">{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::sqrt(x);</highlight></codeline>
<codeline lineno="757"><highlight class="normal">}</highlight></codeline>
<codeline lineno="758"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tan(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="759"><highlight class="normal">{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::tan(x);</highlight></codeline>
<codeline lineno="761"><highlight class="normal">}</highlight></codeline>
<codeline lineno="762"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tanh(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="763"><highlight class="normal">{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::tanh(x);</highlight></codeline>
<codeline lineno="765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="766"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tgamma(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="767"><highlight class="normal">{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::tgamma(x);</highlight></codeline>
<codeline lineno="769"><highlight class="normal">}</highlight></codeline>
<codeline lineno="770"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>trunc(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="771"><highlight class="normal">{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hc::precise_math::trunc(x);</highlight></codeline>
<codeline lineno="773"><highlight class="normal">}</highlight></codeline>
<codeline lineno="774"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y0(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="775"><highlight class="normal">{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__hip_y0(x);</highlight></codeline>
<codeline lineno="777"><highlight class="normal">}</highlight></codeline>
<codeline lineno="778"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y1(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="779"><highlight class="normal">{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__hip_y1(x);</highlight></codeline>
<codeline lineno="781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="782"><highlight class="normal">__device__<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yn(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="783"><highlight class="normal">{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__hip_yn(n,<sp/>x);</highlight></codeline>
<codeline lineno="785"><highlight class="normal">}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cospif(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="789"><highlight class="normal">{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::cos(x*HIP_PI);</highlight></codeline>
<codeline lineno="791"><highlight class="normal">}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fdividef(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="794"><highlight class="normal">{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>/<sp/>y;</highlight></codeline>
<codeline lineno="796"><highlight class="normal">}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isfinite(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="799"><highlight class="normal">{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::isfinite(x);</highlight></codeline>
<codeline lineno="801"><highlight class="normal">}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>signbit(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="804"><highlight class="normal">{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::signbit(x);</highlight></codeline>
<codeline lineno="806"><highlight class="normal">}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sinpif(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="809"><highlight class="normal">{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::sin(x*HIP_PI);</highlight></codeline>
<codeline lineno="811"><highlight class="normal">}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rsqrtf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="814"><highlight class="normal">{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>/<sp/>std::sqrt(x);</highlight></codeline>
<codeline lineno="816"><highlight class="normal">}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>modff(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*iptr)</highlight></codeline>
<codeline lineno="819"><highlight class="normal">{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::modf(x,<sp/>iptr);</highlight></codeline>
<codeline lineno="821"><highlight class="normal">}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fdivide(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="824"><highlight class="normal">{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x/y;</highlight></codeline>
<codeline lineno="826"><highlight class="normal">}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>normcdff(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t)</highlight></codeline>
<codeline lineno="829"><highlight class="normal">{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(1<sp/>-<sp/>std::erf(-t/std::sqrt(2)))/2;</highlight></codeline>
<codeline lineno="831"><highlight class="normal">}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>normcdf(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="834"><highlight class="normal">{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(1<sp/>-<sp/>std::erf(-x/std::sqrt(2)))/2;</highlight></codeline>
<codeline lineno="836"><highlight class="normal">}</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>erfcxf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="839"><highlight class="normal">{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::exp(x*x)<sp/>*<sp/>std::erfc(x);</highlight></codeline>
<codeline lineno="841"><highlight class="normal">}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>erfcx(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="844"><highlight class="normal">{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::exp(x*x)<sp/>*<sp/>std::erfc(x);</highlight></codeline>
<codeline lineno="846"><highlight class="normal">}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rhypotf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="849"><highlight class="normal">{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>/<sp/>std::sqrt(x*x<sp/>+<sp/>y*y);</highlight></codeline>
<codeline lineno="851"><highlight class="normal">}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rhypot(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="854"><highlight class="normal">{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>/<sp/>std::sqrt(x*x<sp/>+<sp/>y*y);</highlight></codeline>
<codeline lineno="856"><highlight class="normal">}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rcbrtf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a)</highlight></codeline>
<codeline lineno="859"><highlight class="normal">{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>/<sp/>std::cbrt(a);</highlight></codeline>
<codeline lineno="861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rcbrt(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a)</highlight></codeline>
<codeline lineno="864"><highlight class="normal">{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>/<sp/>std::cbrt(a);</highlight></codeline>
<codeline lineno="866"><highlight class="normal">}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>normf(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*a)</highlight></codeline>
<codeline lineno="869"><highlight class="normal">{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;dim;i++)</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>val<sp/>+<sp/>a[i]<sp/>*<sp/>a[i];</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="876"><highlight class="normal">}</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rnormf(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*t)</highlight></codeline>
<codeline lineno="879"><highlight class="normal">{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;dim;i++)</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>val<sp/>+<sp/>t[i]<sp/>*<sp/>t[i];</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>/<sp/>std::sqrt(val);</highlight></codeline>
<codeline lineno="886"><highlight class="normal">}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rnorm(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*t)</highlight></codeline>
<codeline lineno="889"><highlight class="normal">{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;dim;i++)</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>val<sp/>+<sp/>t[i]<sp/>*<sp/>t[i];</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>/<sp/>std::sqrt(val);</highlight></codeline>
<codeline lineno="896"><highlight class="normal">}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rnorm4df(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d)</highlight></codeline>
<codeline lineno="899"><highlight class="normal">{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>/<sp/>std::sqrt(a*a<sp/>+<sp/>b*b<sp/>+<sp/>c*c<sp/>+<sp/>d*d);</highlight></codeline>
<codeline lineno="901"><highlight class="normal">}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rnorm4d(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d)</highlight></codeline>
<codeline lineno="904"><highlight class="normal">{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>/<sp/>std::sqrt(a*a<sp/>+<sp/>b*b<sp/>+<sp/>c*c<sp/>+<sp/>d*d);</highlight></codeline>
<codeline lineno="906"><highlight class="normal">}</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rnorm3df(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="909"><highlight class="normal">{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>/<sp/>std::sqrt(a*a<sp/>+<sp/>b*b<sp/>+<sp/>c*c);</highlight></codeline>
<codeline lineno="911"><highlight class="normal">}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rnorm3d(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="914"><highlight class="normal">{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>/<sp/>std::sqrt(a*a<sp/>+<sp/>b*b<sp/>+<sp/>c*c);</highlight></codeline>
<codeline lineno="916"><highlight class="normal">}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sincospif(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*sptr,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*cptr)</highlight></codeline>
<codeline lineno="919"><highlight class="normal">{</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>*sptr<sp/>=<sp/>std::sin(HIP_PI*x);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/>*cptr<sp/>=<sp/>std::cos(HIP_PI*x);</highlight></codeline>
<codeline lineno="922"><highlight class="normal">}</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sincospi(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*sptr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*cptr)</highlight></codeline>
<codeline lineno="925"><highlight class="normal">{</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>*sptr<sp/>=<sp/>std::sin(HIP_PI*x);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/>*cptr<sp/>=<sp/>std::cos(HIP_PI*x);</highlight></codeline>
<codeline lineno="928"><highlight class="normal">}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>nextafterf(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="931"><highlight class="normal">{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nextafter(x,<sp/>y);</highlight></codeline>
<codeline lineno="933"><highlight class="normal">}</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nextafter(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="936"><highlight class="normal">{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nextafter(x,<sp/>y);</highlight></codeline>
<codeline lineno="938"><highlight class="normal">}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>norm3df(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="941"><highlight class="normal">{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::sqrt(a*a<sp/>+<sp/>b*b<sp/>+<sp/>c*c);</highlight></codeline>
<codeline lineno="943"><highlight class="normal">}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>norm4df(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d)</highlight></codeline>
<codeline lineno="946"><highlight class="normal">{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::sqrt(a*a<sp/>+<sp/>b*b<sp/>+<sp/>c*c<sp/>+<sp/>d*d);</highlight></codeline>
<codeline lineno="948"><highlight class="normal">}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>norm3d(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="951"><highlight class="normal">{</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::sqrt(a*a<sp/>+<sp/>b*b<sp/>+<sp/>c*c);</highlight></codeline>
<codeline lineno="953"><highlight class="normal">}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>norm4d(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d)</highlight></codeline>
<codeline lineno="956"><highlight class="normal">{</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::sqrt(a*a<sp/>+<sp/>b*b<sp/>+<sp/>c*c<sp/>+<sp/>d*d);</highlight></codeline>
<codeline lineno="958"><highlight class="normal">}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sinpi(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a)</highlight></codeline>
<codeline lineno="961"><highlight class="normal">{</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::sin(HIP_PI<sp/>*<sp/>a);</highlight></codeline>
<codeline lineno="963"><highlight class="normal">}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cospi(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a)</highlight></codeline>
<codeline lineno="966"><highlight class="normal">{</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::cos(HIP_PI<sp/>*<sp/>a);</highlight></codeline>
<codeline lineno="968"><highlight class="normal">}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isfinite(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a)</highlight></codeline>
<codeline lineno="971"><highlight class="normal">{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::isfinite(a);</highlight></codeline>
<codeline lineno="973"><highlight class="normal">}</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>norm(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*t)</highlight></codeline>
<codeline lineno="976"><highlight class="normal">{</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;dim;i++)</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>+=<sp/>t[i]*t[i];</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::sqrt(val);</highlight></codeline>
<codeline lineno="983"><highlight class="normal">}</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rsqrt(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="986"><highlight class="normal">{</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1/std::sqrt(x);</highlight></codeline>
<codeline lineno="988"><highlight class="normal">}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><ref refid="host__defines_8h_1a803050db3c78e0db3ea59a0c35499622" kindref="member">__host__</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>signbit(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="991"><highlight class="normal">{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::signbit(x);</highlight></codeline>
<codeline lineno="993"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/mohit/Desktop/doxygen/hip/HIP/src/math_functions.cpp"/>
  </compounddef>
</doxygen>
